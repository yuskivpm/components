{"version":3,"file":"DatahubDataTypeConfigurationFileValue.mjs","sources":["../../src/components/dataTypes/FileValue/DatahubDataTypeConfigurationFileValue.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ACol, ACheckbox, ATextField } from \"@actindo/core-ui\";\nimport type {\n  ITenantAttribute,\n  IDataTypeInstance,\n} from \"@/services/api/DataHub/Attributes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { IDataTypesFileValueConfiguration } from \"./models\";\n\ndefineProps<{\n  attribute: ITenantAttribute;\n  dataTypeInstance: IDataTypeInstance<IDataTypesFileValueConfiguration>;\n  remoteScopes?: ITenantAttributeScope[];\n  remoteLanguages?: ITenantAttributeLanguage[];\n  readonly?: boolean;\n}>();\n\nconst configuration = defineModel<IDataTypesFileValueConfiguration>({\n  set: ({ minFiles, maxFiles, ...rest }) =>\n    ({\n      maxFiles: Number(maxFiles),\n      minFiles: Number(minFiles),\n      ...rest,\n    }) as IDataTypesFileValueConfiguration,\n});\n</script>\n\n<template>\n  <ACol>\n    <ATextField\n      v-model=\"configuration.prefixField\"\n      :label=\"$t('files.prefixField')\"\n      :readonly=\"readonly\"\n      :hint=\"$t('files.prefixHint')\"\n      persistent-hint\n    />\n  </ACol>\n  <ACol>\n    <ATextField\n      v-model.number=\"configuration.minFiles\"\n      :label=\"$t('files.minFiles')\"\n      type=\"number\"\n      :readonly=\"readonly\"\n    />\n  </ACol>\n  <ACol>\n    <ATextField\n      v-model.number=\"configuration.maxFiles\"\n      :label=\"$t('files.maxFiles')\"\n      type=\"number\"\n      :readonly=\"readonly\"\n    />\n  </ACol>\n  <ACol>\n    <ATextField\n      v-model=\"configuration.supportedFileTypes\"\n      :label=\"$t('files.supportedFileTypes')\"\n      :readonly=\"readonly\"\n      :hint=\"$t('files.supportedFileTypesHint')\"\n      persistent-hint\n    />\n  </ACol>\n  <ACol>\n    <ACheckbox\n      v-model=\"configuration.readOnly\"\n      :label=\"$t('stringValue.readOnly')\"\n      :readonly=\"readonly\"\n    />\n  </ACol>\n</template>\n"],"names":[],"mappings":";;;;;;;;;AACA,MAAA,OAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;AAiBM,UAAA,gBAAgB,UAAA,SAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}