{"version":3,"file":"DatahubDataTypeStringValue.mjs","sources":["../../src/utils/helpers.ts","../../src/components/dataTypes/StringValue/DatahubDataTypeStringValue.vue"],"sourcesContent":["import type { ITenantAttribute } from \"@/services/api/DataHub/Attributes\";\n\nconst getPrefixedKey = (key: string, prefix = \"__\") =>\n  key ? prefix + key : \"\";\n\nexport const getTranslatableFieldName = ({\n  key,\n  scope,\n  language,\n  attribute: { scopable, multilanguage },\n}: {\n  key: string;\n  scope: string;\n  language: string;\n  attribute: ITenantAttribute;\n}) =>\n  getPrefixedKey(key, \"_\") +\n  getPrefixedKey(scopable && scope) +\n  getPrefixedKey(multilanguage && language);\n\nexport const getFormElementLabel = (\n  languageName: string,\n  scopeName: string,\n  attribute: ITenantAttribute,\n) => {\n  let ret = attribute.name;\n  if (!attribute.scopable && !attribute.multilanguage) {\n    return ret;\n  }\n\n  ret = ret + \" (\";\n  if (attribute.scopable && attribute.multilanguage) {\n    ret = `${ret}${languageName}|${scopeName}`;\n  } else if (attribute.multilanguage) {\n    ret = `${ret}${languageName}`;\n  } else {\n    ret = `${ret}${scopeName}`;\n  }\n  ret = ret + \")\";\n\n  return ret;\n};\n","<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport { ATextField } from \"@actindo/core-ui\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { ITenantAttribute } from \"@/services/api/DataHub/Attributes\";\nimport { getFormElementLabel } from \"@/utils/helpers\";\n\n// todo UNREADY\n\nconst props = defineProps<{\n  attributeLanguage: ITenantAttributeLanguage;\n  scope: ITenantAttributeScope;\n  attribute: ITenantAttribute;\n  formElementName: string;\n  // invalid: boolean;\n  // errorMessage: string;\n  // readOnly: boolean;\n  // massEditing?: boolean;\n  // multiVariants?: boolean;\n  // default data-type props\n  // fitInto: object;\n}>();\n\nconst formElementLabel = computed(() =>\n  getFormElementLabel(\n    props.attributeLanguage.description,\n    props.scope.name,\n    props.attribute,\n  ),\n);\n\nconst value = ref(\"\"); // todo - should we pass value from parent?\n</script>\n\n<template>\n  <ATextField\n    v-model=\"value\"\n    :readonly=\"attribute.configuration.readOnly\"\n    :name=\"formElementName\"\n    :label=\"formElementLabel\"\n  />\n  <!--  :error=\"invalid\"-->\n  <!--  :error-messages=\"errorMessage\"-->\n</template>\n"],"names":[],"mappings":"AAoBO,MAAM,sBAAsB,CACjC,cACA,WACA,cACG;AACH,MAAI,MAAM,UAAU;AACpB,MAAI,CAAC,UAAU,YAAY,CAAC,UAAU,eAAe;AAC5C,WAAA;AAAA,EACT;AAEA,QAAM,MAAM;AACR,MAAA,UAAU,YAAY,UAAU,eAAe;AACjD,UAAM,GAAG,GAAG,GAAG,YAAY,IAAI,SAAS;AAAA,EAAA,WAC/B,UAAU,eAAe;AAC5B,UAAA,GAAG,GAAG,GAAG,YAAY;AAAA,EAAA,OACtB;AACC,UAAA,GAAG,GAAG,GAAG,SAAS;AAAA,EAC1B;AACA,QAAM,MAAM;AAEL,SAAA;AACT;;;;;ACxCA,MAAA,WAAA,OAAA,KAAA,EAAA;;AACA,MAAA,aAAA,OAAA,eAAA,EAAA;;;;;;;;;;AAQA,UAAM,QAAQ;AAcd,UAAM,mBAAmB;AAAA,MAAS,MAChC;AAAA,QACE,MAAM,kBAAkB;AAAA,QACxB,MAAM,MAAM;AAAA,QACZ,MAAM;AAAA,MACR;AAAA,IAAA;AAGI,UAAA,QAAQ,IAAI,EAAE;;;;;;;;;;;;"}