{"version":3,"file":"DatahubDataTypeUnitValueConfiguration.mjs","sources":["../../src/components/dataTypes/UnitValue/DatahubDataTypeUnitValueConfiguration.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, onBeforeMount, watch } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport { storeToRefs } from \"pinia\";\nimport { ACol, ASelect, ACheckbox } from \"@actindo/core-ui\";\nimport type {\n  IDataTypeInstance,\n  ICacheEntitiesAttributeInSetCache,\n} from \"@/services/api/DataHub/Attributes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport { useDataTypesStore } from \"@/stores/dataTypes\";\nimport type { IDataTypesUnitValueConfiguration } from \"./models\";\n\ndefineProps<{\n  dataTypeInstance: IDataTypeInstance<IDataTypesUnitValueConfiguration>;\n  remoteScopes?: ITenantAttributeScope[];\n  remoteLanguages?: ITenantAttributeLanguage[];\n  remoteAttributes?: ICacheEntitiesAttributeInSetCache[];\n  readonly?: boolean;\n}>();\n\nconst configuration = defineModel<IDataTypesUnitValueConfiguration>();\n\nconst { t } = useI18n();\n\nconst dataTypesStore = useDataTypesStore();\nconst { dimensions, isDimensionsLoading } = storeToRefs(dataTypesStore);\n\nconst units = computed(() => {\n  const dimension = dimensions.value.find(\n    ({ id }) => id === configuration.value.dimensionId,\n  );\n  if (!dimension) {\n    return [];\n  }\n\n  return dimension.units.map(({ id, name, symbol }) => ({\n    id,\n    title: `${name} (${symbol})`,\n  }));\n});\n\nwatch(\n  () => configuration.value.dimensionId,\n  () => {\n    configuration.value.defaultUnitId = undefined;\n  },\n  { immediate: true },\n);\n\nonBeforeMount(dataTypesStore.fetchDimensions);\n</script>\n\n<template>\n  <ACol>\n    <ASelect\n      v-model=\"configuration.dimensionId\"\n      :items=\"dimensions\"\n      :loading=\"isDimensionsLoading\"\n      :label=\"t('datahub-plugin.unitValue.dimension')\"\n      :readonly=\"readonly\"\n      item-title=\"name\"\n      item-value=\"id\"\n    />\n  </ACol>\n  <ACol>\n    <ASelect\n      v-model=\"configuration.defaultUnitId\"\n      :items=\"units\"\n      :loading=\"isDimensionsLoading\"\n      :disabled=\"!configuration.dimensionId\"\n      :label=\"t('datahub-plugin.unitValue.defaultUnit')\"\n      :readonly=\"readonly\"\n      item-value=\"id\"\n    />\n  </ACol>\n  <ACol>\n    <ACheckbox\n      v-model=\"configuration.readOnly\"\n      :label=\"t('datahub-plugin.unitValue.readOnly')\"\n      :readonly=\"readonly\"\n    />\n  </ACol>\n</template>\n\n<i18n>\n{\n  \"en\": {\n    \"datahub-plugin\": {\n      \"unitValue\": {\n        \"dimension\": \"Dimension\",\n        \"defaultUnit\": \"Default unit\",\n        \"readOnly\": \"Read only\"\n      }\n    }\n  },\n  \"de\": {\n    \"datahub-plugin\": {\n      \"unitValue\": {\n        \"dimension\": \"Dimension\",\n        \"defaultUnit\": \"Default unit\",\n        \"readOnly\": \"Schreibgeschützt\"\n      }\n    }\n  }\n}\n</i18n>\n"],"names":["Read only","Schreibgeschützt"],"mappings":";;;;;;;;;;AACA,MAAA,WAAA,OAAA,KAAA,EAAA;;;AACA,MAAA,UAAA,OAAA,SAAA,EAAA;AACA,MAAA,cAAA,OAAA,OAAA,EAAA;AACA,MAAA,OAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;AAkBM,UAAA,gBAAgB,UAA8C,SAAA,YAAA;AAE9D,UAAA,EAAE,MAAM;AAEd,UAAM,iBAAiB;AACvB,UAAM,EAAE,YAAY,oBAAoB,IAAI,YAAY,cAAc;AAEhE,UAAA,QAAQ,SAAS,MAAM;AACrB,YAAA,YAAY,WAAW,MAAM;AAAA,QACjC,CAAC,EAAE,GAAS,MAAA,OAAO,cAAc,MAAM;AAAA,MAAA;AAEzC,UAAI,CAAC,WAAW;AACd,eAAO;MACT;AAEO,aAAA,UAAU,MAAM,IAAI,CAAC,EAAE,IAAI,MAAM,cAAc;AAAA,QACpD;AAAA,QACA,OAAO,GAAG,IAAI,KAAK,MAAM;AAAA,MACzB,EAAA;AAAA,IAAA,CACH;AAED;AAAA,MACE,MAAM,cAAc,MAAM;AAAA,MAC1B,MAAM;AACJ,sBAAc,MAAM,gBAAgB;AAAA,MACtC;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IAAA;AAGpB,kBAAc,eAAe,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA0CxBA,kBAAAA;AAAAA;;;;;;;;;;;;;;;;;QASAC,kBAAAA;AAAAA;;;;;;;;;;;;;;;;;;;;;"}