{"version":3,"file":"DatahubExternalComponent.vue_vue_type_script_setup_true_lang-CuHT_S4a.mjs","sources":["../../src/services/api/DataHub/ETLAttributeMaps/ETLAttributeMaps.ts","../../src/services/api/DataHub/ETLAttributeMaps/ETLAttributeMaps.models.ts","../../src/services/api/DataHub/ETLProcesses/ETLProcesses.ts","../../src/services/api/DataHub/ETLProcesses/ETLProcesses.models.ts","../../src/services/api/DataHub/AttributeSets/AttributeSets.ts","../../src/services/api/DataHub/AttributeSets/AttributeSets.models.ts","../../src/constants/index.ts","../../src/services/api/DataHub/TreeNodeValueController/TreeNodeValueController.ts","../../src/services/api/DataHub/DeletedAttributes/DeletedAttributes.ts","../../src/services/api/DataHub/ETLAttributeSetMaps/ETLAttributeSetMaps.ts","../../src/constants/tables.ts","../../src/utils/validation.ts","../../src/components/KeyTextField.vue","../../src/components/TreeView/TreeViewItem.vue","../../src/components/TreeView/TreeViewColumn.vue","../../src/components/TreeView/TreeView.vue","../../src/components/TreeView/TreeItemLoading.vue","../../src/components/dataTypes/TreeNodeValue/DatahubDataTypeTreeNodeValueConfiguration.vue","../../src/components/dataTypes/constants.ts","../../src/components/dataTypes/DatahubDataTypeEditor.vue","../../src/components/dataTypes/etl/ConstToXExtension.vue","../../src/MOCKS.ts","../../src/utils/helpers.ts","../../src/components/dataTypes/DatahubExternalComponent.vue"],"sourcesContent":["import {\n  httpClient,\n  type IDataTableQuery,\n  type IDataFetcherResponse,\n} from \"@actindo/core-ui\";\n\nimport { BASE_API } from \"../base\";\nimport type {\n  IETLAttributeMapping,\n  IPossibleExtensionRequest,\n  ICreateAttributeMapRequest,\n  IPossibleExtensionContainer,\n  IPossibleSourceAttributesRequest,\n} from \".\";\nimport type { ITenantAttribute } from \"@/services/api/DataHub/Attributes\";\n\nconst MODULE_BASE_API = `${BASE_API}ETLAttributeMaps.`;\n\nexport const etlAttributeMapsApi = {\n  /** List all ETLAttributeMaps for a given ETLAttributeSetMap */\n  async getList(\n    query?: IDataTableQuery & {\n      attributeSetMapId: number;\n      hideInactive: boolean;\n    },\n  ): Promise<IDataFetcherResponse<IETLAttributeMapping>> {\n    return httpClient.post(`${MODULE_BASE_API}get`, query);\n  },\n  /** Add attribute from destination set to source set and map with SelfMappableExtension */\n  async addSourceAndMap(\n    etlAttributeSetMapId: number,\n    attributeId: number,\n  ): Promise<IDataFetcherResponse<IETLAttributeMapping>> {\n    return httpClient.post(`${MODULE_BASE_API}addSourceAndMap`, {\n      etlAttributeSetMapId,\n      attributeId,\n    });\n  },\n  /** List possible extensions */\n  async getPossibleExtensions(\n    query: IPossibleExtensionRequest,\n  ): Promise<IDataFetcherResponse<IPossibleExtensionContainer>> {\n    return httpClient.post(`${MODULE_BASE_API}getPossibleExtensions`, query);\n  },\n  /** List possible source attributes */\n  async getPossibleSourceAttributes(\n    query: IPossibleSourceAttributesRequest,\n  ): Promise<IDataFetcherResponse<ITenantAttribute>> {\n    return httpClient.post(\n      `${MODULE_BASE_API}getPossibleSourceAttributes`,\n      query,\n    );\n  },\n  /** Creates an ETLAttributeMap */\n  async create(\n    query: ICreateAttributeMapRequest,\n  ): Promise<IDataFetcherResponse<ITenantAttribute>> {\n    return httpClient.post(`${MODULE_BASE_API}create`, query);\n  },\n  /** Updates and ETLAttributeMap, no selective updates */\n  async update(\n    query: ICreateAttributeMapRequest,\n  ): Promise<IDataFetcherResponse<ITenantAttribute>> {\n    return httpClient.post(`${MODULE_BASE_API}update`, query);\n  },\n  /** Deletes an ETL attribute map */\n  async delete(id: number): Promise<IDataFetcherResponse<ITenantAttribute>> {\n    return httpClient.post(`${MODULE_BASE_API}delete`, { id });\n  },\n};\n","import type {\n  IBase,\n  IBaseEntity,\n  IDataTypesAttributeConfigurationAbstract,\n} from \"@/services/api/common\";\nimport type {\n  ITenantAttribute,\n  IDataTypeInstance,\n} from \"@/services/api/DataHub/Attributes\";\nimport type { ITenantETLAttributeSetMap } from \"@/services/api/DataHub/ETLAttributeSetMaps\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { ITenantAttributeGroup } from \"@/services/api/DataHub/Groups\";\n\nexport enum CHANGE_TRACKING_MODE {\n  DEFAULT = -1,\n  MANUAL = 0,\n  SEMIAUTOMATIC = 1, // changes must be confirmed manually\n  AUTOMATIC = 2,\n  SEMIAUTOMATIC_DIFFERENT_USER = 3, // changes must be confirmed manually by another user\n}\n\nexport const enum SOURCE_TYPE {\n  DataHub = 0,\n  NATIVE = 1,\n  EMPTY = 2,\n  SUB_ENTITY = 3,\n}\nexport interface ISourcePorts {\n  sourceType: SOURCE_TYPE;\n  sourceAttribute: { name: string };\n  sourceNativeField: string;\n  sourceDataTypeInstance?: IDataTypeInstance;\n  sourceLanguage?: ITenantAttributeLanguage;\n  sourceScope?: ITenantAttributeScope;\n  portName: string;\n}\n\n/** Actindo.Modules.Actindo.DataHub.Models.Tenant.ETLAttributeMap */\nexport interface ITenantETLAttributeMap<\n  T extends\n    IDataTypesAttributeConfigurationAbstract = IDataTypesAttributeConfigurationAbstract,\n> extends IBase {\n  // source attributes/fields\n  sourcePorts: ISourcePorts[];\n  // internal property for unique key\n  destinationKey: string;\n  // native (1) or datahub field (0)\n  destinationType: number;\n  // name of native field only relevant if destinationType=0\n  destinationNativeField: string;\n  destinationAttribute: ITenantAttribute;\n  etlAttributeSetMap: ITenantETLAttributeSetMap;\n  destinationLanguage: ITenantAttributeLanguage;\n  destinationScope: ITenantAttributeScope;\n  configuration: T;\n  extension: string;\n  extensionName: string;\n  // if set the behaviour of ETLAttributeSetMap is overwritten\n  overrideChangeTrackingMode: CHANGE_TRACKING_MODE;\n}\n\nexport interface IA<\n  T extends\n    IDataTypesAttributeConfigurationAbstract = IDataTypesAttributeConfigurationAbstract,\n> extends IBaseEntity {\n  configText: string;\n  configuration: IDataTypesAttributeConfigurationAbstract;\n  dataType: string;\n  dataTypeFriendlyName: string;\n  dataTypeInstance: IDataTypeInstance<T>;\n  group: ITenantAttributeGroup;\n  groupId: number;\n  groupName: string;\n  groupOrder: number;\n  id: number;\n  multilanguage: boolean;\n  ownerPluginName: string;\n  scopable: boolean;\n}\n\nexport interface IM extends IBase {\n  attributeId: number;\n  attributeSetName: string;\n  calculatedFromFields: boolean;\n  configTextSet: string;\n  configuration: IDataTypesAttributeConfigurationAbstract;\n  destinationAttributeNotMappable: boolean;\n  dhAttribute: ITenantAttribute;\n  dhAttributeName: string;\n  inherited: boolean;\n  ownerPluginName: string;\n  parentSetName: string;\n  readOnly: boolean;\n  requireFlag: boolean;\n  requiredFlag: boolean;\n  uniqueFlag: number;\n  _E: number;\n}\n\nexport interface IETLAttributeMapping<\n  T extends\n    IDataTypesAttributeConfigurationAbstract = IDataTypesAttributeConfigurationAbstract,\n> {\n  /** target attribute */\n  a: IA;\n  /** extension mapping */\n  em?: ITenantETLAttributeMap<T>;\n  m: IM;\n}\n\nexport interface IPossibleExtensionRequest {\n  /** of destination attribute */\n  dataType: string;\n  /** needed for self mappable */\n  destinationAttributeId: number;\n  /** needed for self mappable */\n  etlAttributeSetMapId: number;\n}\n\nexport interface IPossibleSourceAttributesRequest {\n  // id of the datamapper attribute set map\n  etlSetMapId: number;\n  // allowed data types\n  dataTypes: string[];\n  // string the classname\n  extension: string;\n  destinationAttributeId: number;\n}\n\nexport interface IExtensionPort {\n  id: string;\n  portName: string;\n  name: string;\n  sourceDataTypes: string[];\n  optional: boolean;\n}\n\n/** Actindo.Modules.Actindo.DataHub.Response.PossibleExtensionContainer */\nexport interface IPossibleExtensionContainer {\n  id: string;\n  name: string;\n  ports: IExtensionPort[];\n  class: string;\n  configurationImport: string;\n  configurationComponent: string;\n}\n\n/** Actindo.Modules.Actindo.DataHub.Request.ETLAttributeMapSource */\nexport interface IETLAttributeMapSource {\n  portName: string;\n  // Source type (0 for DataHub attribute, 1 for native field, 2 for empty source)\n  sourceType: number;\n  // needed if empty source\n  sourceValue?: unknown;\n  // Source attribute ID (if sourceType == 0) or source native field key (if sourceType == 1), data type of const value, add \"-\" in front of class name (sourceType == 2)\n  dhSourceAttributeId: string;\n  // Source attribute language ID (if sourceType == 0) only needed if default behaviour has to be changed\n  dhSourceAttributeLanguageId?: number;\n  // Source attribute scope ID (if sourceType == 0) only needed if default behaviour has to be changed\n  dhSourceAttributeScopeId?: number;\n}\n\nexport interface ICreateAttributeMapRequest {\n  etlAttributeSetMapId: number;\n  // id of attribute OR name of static field e.g. sku\n  dhDestinationAttributeId: string;\n  // native field => 1, datahub field => 0\n  destinationType: number;\n  // needed if specific mapping is done for a certain language of the destination attribute\n  dhDestinationAttributeLanguageId?: number;\n  // needed if specific mapping is done for a certain scope of the destination attribute\n  dhDestinationAttributeScopeId?: number;\n  // (EITHER this field or sources array!) Source type (0 for DataHub attribute, 1 for native field, 2 for empty source)\n  sourceType?: number;\n  // (EITHER this field or sources array!) Source attribute ID (if sourceType == 0) or source native field key (if sourceType == 1)\n  dhSourceAttributeId?: string;\n  // (EITHER this field or sources array!) Source attribute language ID (if sourceType == 0)\n  dhSourceAttributeLanguageId?: number;\n  // (EITHER this field or sources array!) Source attribute scope ID (if sourceType == 0)\n  dhSourceAttributeScopeId?: number;\n  // Use either an array of sources or the fields sourceType, dhSourceAttributeId, dhSourceAttributeLanguageId, dhSourceAttributeScopeId\n  sources?: IETLAttributeMapSource[];\n  // class name of the extension\n  extension: string;\n  config?: unknown;\n  // possibility to override the change tracking mode, see ETL::getChangeTrackingModes for a list\n  overrideChangeTrackingMode: CHANGE_TRACKING_MODE;\n  id?: string;\n}\n","import {\n  httpClient,\n  type IApiSuccess,\n  type IDataFetcherResponse,\n} from \"@actindo/core-ui\";\n\nimport { BASE_API } from \"../base\";\nimport type { ITenantETLProcess, IEtlProcessesDataTableQuery } from \".\";\n\nconst MODULE_BASE_API = `${BASE_API}ETLProcesses.`;\n\nexport const etlProcessesApi = {\n  /** List etl processes */\n  async getList(\n    query?: IEtlProcessesDataTableQuery,\n  ): Promise<IDataFetcherResponse<ITenantETLProcess>> {\n    return httpClient.post(`${MODULE_BASE_API}getList`, query);\n  },\n  /** Updates process status given process ID */\n  async retryProcess(id: number): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}retryProcess`, { id });\n  },\n};\n","import type { IDataTableQuery } from \"@actindo/core-ui\";\nimport type { ITenantEntityType } from \"@/services/api/DataHub/AttributeSets\";\nimport type { ITenantETLAttributeSetMap } from \"@/services/api/DataHub/ETLAttributeSetMaps\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ITenantETLAttributeMap } from \"@/services/api/DataHub/ETLAttributeMaps\";\n\nexport enum ETL_PROCESS_STATUS {\n  TODO = 1,\n  ERROR = 2,\n  DONE = 3,\n  FROZEN = 4,\n  AWAITING_CONFIRMATION = 5,\n  SYNCHRONOUS = 6,\n  AWAITING_DIFFERENT_CONFIRMATION = 7,\n  SEMI_AUTOMATIC_ACCEPTED = 8,\n}\n\nexport interface IEtlProcessesDataTableQuery extends IDataTableQuery {\n  /** enter the status number whose processes you'll like to get */\n  status?: number;\n  source?: number;\n}\n\n/** Actindo.Modules.Actindo.DataHub.Models.Tenant.Dependencies */\nexport interface ITenantDependencies {\n  entityId: number;\n  dependentEntityId: number;\n  entityType: ITenantEntityType;\n  dependentEntityType: ITenantEntityType;\n  // One of ETLManager::(CHANGE_TRACKING_MODE_MANUAL|CHANGE_TRACKING_MODE_SEMIAUTOMATIC|CHANGE_TRACKING_MODE_SEMIAUTOMATIC_DIFFERENT_USER|CHANGE_TRACKING_MODE_AUTOMATIC)\n  changeTracking: number;\n  dependentEntity: object; // (Actindo.Modules.Actindo.DataHub.DataHubAwareEntityInterface)\n  sourceEntity: object; // (Actindo.Modules.Actindo.DataHub.DataHubAwareEntityInterface)\n  etlAttributeSetMap: ITenantETLAttributeSetMap;\n  id: number;\n}\n\n/** Actindo.Modules.Actindo.DataHub.Models.Tenant.ETLProcess */\nexport interface ITenantETLProcess {\n  updated: string;\n  sourceEntityType: { name: string };\n  sourceEntityId: number;\n  destinationEntityType: { name: string };\n  destinationEntityId: number;\n  destinationScope: ITenantAttributeScope;\n  destinationLanguage: ITenantAttributeLanguage;\n  dependency: ITenantDependencies;\n  etlAttributeMap: ITenantETLAttributeMap;\n  status: ETL_PROCESS_STATUS;\n  error: string;\n  createdBy: number;\n  acceptedBy: number;\n  accepted: string;\n  sourceEntityFriendlyIdentifier: string;\n  destinationEntityFriendlyIdentifier: string;\n  id: number;\n}\n","import type {\n  IApiPayload,\n  IApiSuccess,\n  IDataTableQuery,\n  IDataFetcherResponse,\n} from \"@actindo/core-ui\";\nimport { httpClient } from \"@actindo/core-ui\";\n\nimport { BASE_API } from \"../base\";\nimport type {\n  IListOfLanguagesScopesAndFields,\n  IDataTableQueryWithSerializeOptionals,\n} from \"@/services/api/common\";\nimport type { ITenantAttributeSetMap } from \"@/services/api/DataHub/Attributes\";\nimport {\n  ITenantEntityType,\n  ITenantAttributeSet,\n  IAddAttributeRequest,\n  IUpdateAttributeRequest,\n  IAttributeSetsForHeritage,\n  IAttributeSetsDataFetcherResponse,\n} from \".\";\n\nconst MODULE_BASE_API = `${BASE_API}AttributeSets.`;\n\nexport const attributeSetsApi = {\n  /** returns a list of attribute sets */\n  async getList(\n    query?: IDataTableQueryWithSerializeOptionals,\n  ): Promise<IAttributeSetsDataFetcherResponse> {\n    return httpClient.post(`${MODULE_BASE_API}getList`, query);\n  },\n  /** get attribute set */\n  async get(\n    id: number,\n    freeze: boolean,\n  ): Promise<IApiPayload<ITenantAttributeSet>> {\n    return httpClient.post(`${MODULE_BASE_API}get`, { id, freeze });\n  },\n  /** creates a new attribute set */\n  async create(\n    entity: Partial<ITenantAttributeSet>,\n  ): Promise<IApiPayload<ITenantAttributeSet>> {\n    return httpClient.post(`${MODULE_BASE_API}create`, entity);\n  },\n  /** remove attribute set */\n  async delete(ids: number[]): Promise<IApiSuccess> {\n    // todo BE returns error - method not found\n    return httpClient.post(`${MODULE_BASE_API}delete`, { ids });\n  },\n  /** updates a single attribute set; selective updates */\n  async save(\n    entity: Partial<ITenantAttributeSet>,\n  ): Promise<IApiPayload<ITenantAttributeSet>> {\n    return httpClient.post(`${MODULE_BASE_API}save`, entity);\n  },\n  /** add attributes to a certain attribute set */\n  async addAttributes(query: IAddAttributeRequest): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}addAttributes`, query);\n  },\n  /** add a single attribute to a certain attribute set */\n  async addAttribute(\n    dhAttributeSetId: number,\n    dhAttributeId: number,\n  ): Promise<IApiSuccess> {\n    return attributeSetsApi.addAttributes({\n      dhAttributeSetId,\n      dhAttributeIds: [dhAttributeId],\n    });\n  },\n  /** updates an attribute to attribute set mapping */\n  async updateAttribute(\n    payload: IUpdateAttributeRequest,\n  ): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}updateAttribute`, payload);\n  },\n  /** remove a list of attributes from a certain attribute set */\n  async removeAttributes(\n    dhAttributeSetId: number,\n    dhAttributeIds: number[],\n  ): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}removeAttributes`, {\n      dhAttributeSetId,\n      dhAttributeIds,\n    });\n  },\n  /** remove an attribute from a certain attribute set */\n  async removeAttribute(\n    dhAttributeSetId: number,\n    dhAttributeId: number,\n  ): Promise<IApiSuccess> {\n    return attributeSetsApi.removeAttributes(dhAttributeSetId, [dhAttributeId]);\n  },\n  /** Returns list of attribute set that we could inherit from */\n  async getPossibleAttributeSetsForHeritage(\n    dhAttributeSetId: number,\n  ): Promise<IApiPayload<IAttributeSetsForHeritage>> {\n    return httpClient.post(\n      `${MODULE_BASE_API}getPossibleAttributeSetsForHeritage`,\n      {\n        dhAttributeSetId,\n      },\n    );\n  },\n  /** returns a paged list of all attributes that are assigned to a specific attribute set */\n  async getAttributes(\n    query?: IDataTableQuery & { setId: number },\n  ): Promise<IDataFetcherResponse<ITenantAttributeSetMap>> {\n    return httpClient.post(`${MODULE_BASE_API}getAttributes`, query);\n  },\n  /** List entity types */\n  async getEntityTypes(): Promise<IApiPayload<ITenantEntityType>> {\n    return httpClient.post(`${MODULE_BASE_API}getEntityTypes`);\n  },\n  /** getListOfLanguagesScopesAndFields */\n  async getListOfLanguagesScopesAndFields(): Promise<IListOfLanguagesScopesAndFields> {\n    return httpClient.post(\n      `${MODULE_BASE_API}getListOfLanguagesScopesAndFields`,\n    );\n  },\n};\n","import type { IDataFetcherResponse } from \"@actindo/core-ui\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type {\n  IBaseEntity,\n  IDataTypesAttributeConfigurationAbstract,\n} from \"@/services/api/common\";\n\nexport interface IAttributeSetsDataFetcherResponse\n  extends IDataFetcherResponse<ITenantAttributeSet> {\n  /** false if you are not allowed to add a new attribute set */\n  allowedCreateAction: boolean;\n}\n\n/** Actindo.Modules.Actindo.DataHub.Models.Tenant.EntityType */\nexport interface ITenantEntityType {\n  id: number;\n  name: string;\n  className: string;\n  variantableProperties: string[];\n  entityId: number;\n  _E: number;\n}\n\n/** Actindo.Modules.Actindo.DataHub.Models.Tenant.AttributeSet */\nexport interface ITenantAttributeSet extends IBaseEntity {\n  /** true if all languages are available */\n  allLanguages: boolean;\n  /** true if all scopes are available */\n  allScopes: boolean;\n  entityType: ITenantEntityType;\n  entityTypeClassName: string;\n  /** heritage mode are copyOnce or permanent link */\n  heritageMode?: number;\n  languages: unknown[];\n  languagesArray: ITenantAttributeLanguage[];\n  ownerPluginName: string;\n  parentSet?: ITenantAttributeSet;\n  parentSetId?: number;\n  parentSetName: string;\n  scopes: unknown[];\n  scopesArray: ITenantAttributeScope[];\n  syncConfiguration: boolean;\n  _E: number;\n}\n\nexport interface IAddAttributeRequest {\n  // attribute set id to assign the attribute to\n  dhAttributeSetId: number;\n  // attribute ids to assign to the set\n  dhAttributeIds: number[];\n  requireFlag?: boolean;\n  uniqueFlag?: boolean;\n  readOnly?: boolean;\n  inherited?: boolean;\n}\n\nexport interface IUpdateAttributeRequest {\n  id: number;\n  requireFlag?: boolean;\n  uniqueFlag?: boolean;\n  readOnly?: boolean;\n  inherited?: boolean;\n  config?: IDataTypesAttributeConfigurationAbstract;\n  resetToDefaultConfiguration?: boolean;\n}\n\nexport interface IAttributeSetsForHeritage {\n  id: number;\n  key: string;\n  name: string;\n  parentSetKeys: unknown[];\n}\n\nexport enum ATTRIBUTE_SET_INHERITANCE {\n  //copy attributes just one time\n  COPY_ONCE = 0,\n  //inherit attributes\n  INHERIT = 1,\n}\n","import { ETL_PROCESS_STATUS } from \"@/services/api/DataHub/ETLProcesses\";\nimport { ATTRIBUTE_SET_INHERITANCE } from \"@/services/api/DataHub/AttributeSets\";\nimport { CHANGE_TRACKING_MODE } from \"@/services/api/DataHub/ETLAttributeMaps\";\n\nexport const MAIN_APP_URL = import.meta.env.CORE1_ACCOUNT_URL;\n\nexport const IS_ACTIVE_STATUSES = {\n  false: {\n    icon: \"cancel\",\n    label: \"statuses.isActive.inactive\",\n    color: \"on_light\",\n  },\n  true: {\n    icon: \"check_circle\",\n    label: \"statuses.isActive.active\",\n    color: \"positive_gradient_1\",\n  },\n};\n\nexport const ETL_PROCESS_STATUSES = {\n  [ETL_PROCESS_STATUS.TODO]: {\n    icon: \"play_circle\",\n    label: \"statuses.etlProcess.Todo\",\n    color: \"on_dark\",\n  },\n  [ETL_PROCESS_STATUS.ERROR]: {\n    icon: \"error\",\n    label: \"statuses.etlProcess.Error\",\n    color: \"alert\",\n  },\n  [ETL_PROCESS_STATUS.DONE]: {\n    icon: \"check_circle\",\n    label: \"statuses.etlProcess.Done\",\n    color: \"positive_gradient_1\",\n  },\n  [ETL_PROCESS_STATUS.FROZEN]: {\n    icon: \"pause\",\n    label: \"statuses.etlProcess.Frozen\",\n    color: \"on_light_64\",\n  },\n  [ETL_PROCESS_STATUS.AWAITING_CONFIRMATION]: {\n    icon: \"pause\",\n    label: \"statuses.etlProcess.AwaitingConfirmation\",\n    color: \"on_light_64\",\n  },\n  [ETL_PROCESS_STATUS.SYNCHRONOUS]: {\n    icon: \"timelapse\",\n    label: \"statuses.etlProcess.Synchronous\",\n    color: \"gradient_2\",\n  },\n  [ETL_PROCESS_STATUS.AWAITING_DIFFERENT_CONFIRMATION]: {\n    icon: \"pause\",\n    label: \"statuses.etlProcess.AwaitingConfirmationByDifferentUser\",\n    color: \"on_light_64\",\n  },\n  [ETL_PROCESS_STATUS.SEMI_AUTOMATIC_ACCEPTED]: {\n    icon: \"play_circle\",\n    label: \"statuses.etlProcess.SemiChangeAccepted\",\n    color: \"on_dark\",\n  },\n};\n\nexport const INHERITANCE_STATUSES = {\n  [ATTRIBUTE_SET_INHERITANCE.COPY_ONCE]: \"statuses.inheritance.copyOnce\",\n  [ATTRIBUTE_SET_INHERITANCE.INHERIT]: \"statuses.inheritance.inherit\",\n};\n\nexport const CHANGE_TRACKING_MODE_STATUSES = {\n  [CHANGE_TRACKING_MODE.DEFAULT]:\n    \"statuses.changeTrackingMode.changeTrackingManual\",\n  [CHANGE_TRACKING_MODE.MANUAL]:\n    \"statuses.changeTrackingMode.changeTrackingManual\",\n  [CHANGE_TRACKING_MODE.SEMIAUTOMATIC]:\n    \"statuses.changeTrackingMode.changeTrackingSemiAutomatic\",\n  [CHANGE_TRACKING_MODE.SEMIAUTOMATIC_DIFFERENT_USER]:\n    \"statuses.changeTrackingMode.changeTrackingSemiAutomaticDifferentUser\",\n  [CHANGE_TRACKING_MODE.AUTOMATIC]:\n    \"statuses.changeTrackingMode.changeTrackingAutomatic\",\n};\n\nexport const KEY_PATTERN = /^[a-zA-Z][a-zA-Z0-9_]+[a-zA-Z0-9]$/;\nexport const LANGUAGE_PATTERN =\n  /^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/;\n\nexport const MAX_LIMIT = 1_000_000;\n\nexport enum LANG_AND_SCOPE_CONTROLLER {\n  ATTRIBUTES = \"Attributes\",\n  ATTRIBUTE_SETS = \"AttributeSets\",\n  ATTRIBUTE_GROUPS = \"AttributeGroups\",\n  SCOPES = \"Scopes\",\n  LANGUAGES = \"Languages\",\n}\n\nexport const NAME_ATTRIBUTE_KEY = \"datahub_translatable_name\";\nexport const TRANSLATABLE_KEY = \"datahub_translatable_title\";\n\nexport const TREE_NODE_ATTRIBUTES = [\n  {\n    scopable: false,\n    multilanguage: true,\n    key: TRANSLATABLE_KEY,\n    name: \"title\",\n  },\n];\n\nexport const RESTARTABLE_ETL_PROCESS_STATUSES = [\n  ETL_PROCESS_STATUS.FROZEN,\n  ETL_PROCESS_STATUS.ERROR,\n];\n","import {\n  httpClient,\n  type IApiPayload,\n  type IApiSuccess,\n  type IChildrenFetcherResponse,\n} from \"@actindo/core-ui\";\n\nimport { BASE_API } from \"../base\";\nimport type {\n  ITreeRequest,\n  IClearTreeNode,\n  ITenantTreeNode,\n  ICategoryTreeRequest,\n  IFlatCategoryTreeRequest,\n} from \".\";\n\nconst MODULE_BASE_API = `${BASE_API}TreeNodeValueController.`;\n\nexport const treeNodeValueControllerApi = {\n  /** Allows to delete specific nodes from a treeNodeValue for given entities; Rescue if used nodes have been deleted */\n  async clearTreeNode(query: IClearTreeNode): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}clearTreeNode`, query);\n  },\n  /** Get category tree based on language, scope and attribute id in a tree structure */\n  async getCategoryTree(\n    query: ICategoryTreeRequest,\n  ): Promise<IChildrenFetcherResponse<ITenantTreeNode>> {\n    return httpClient.post(`${MODULE_BASE_API}getCategoryTree`, query);\n  },\n  /** Get attribute tree based on language, scope and attribute id in a flat array structure with ID as key */\n  async getFlatCategoryTree(\n    query: IFlatCategoryTreeRequest,\n  ): Promise<IChildrenFetcherResponse<ITenantTreeNode>> {\n    return httpClient.post(`${MODULE_BASE_API}getFlatCategoryTree`, query);\n  },\n  /** Get attribute tree based on language, scope and attribute id in a flat array structure with ID as key */\n  async getTree(query: ITreeRequest): Promise<IApiPayload<ITenantTreeNode>> {\n    return httpClient.post(`${MODULE_BASE_API}getTree`, query);\n  },\n};\n","import { httpClient, type IDataTableQuery } from \"@actindo/core-ui\";\n\nimport { BASE_API } from \"../base\";\nimport type {\n  ITenantDeletedAttribute,\n  IFinallyDeleteAttribute,\n  IRecoverDeletedAttribute,\n} from \".\";\n\nconst MODULE_BASE_API = `${BASE_API}DeletedAttributes.`;\n\nexport const deletedAttributesApi = {\n  /** returns list of DeletedAttributes */\n  async getList(query?: IDataTableQuery): Promise<ITenantDeletedAttribute> {\n    return httpClient.post(`${MODULE_BASE_API}getList`, query);\n  },\n  /** important: this is the final deletion of an attribute */\n  async delete(ids: number[]): Promise<IFinallyDeleteAttribute> {\n    return httpClient.post(`${MODULE_BASE_API}delete`, { ids });\n  },\n  /** recovers list of attributes from DeletedAttribute given by the ids */\n  async recoverDeletedAttributes(\n    ids: number[],\n  ): Promise<IRecoverDeletedAttribute> {\n    return httpClient.post(`${MODULE_BASE_API}recoverDeletedAttributes`, {\n      ids,\n    });\n  },\n};\n","import {\n  httpClient,\n  type IApiSuccess,\n  type IApiPayload,\n  type IDataTableQuery,\n  type IDataFetcherResponse,\n} from \"@actindo/core-ui\";\n\nimport { BASE_API } from \"../base\";\nimport type {\n  ITenantETLAttributeSetMap,\n  ICreateTenantETLAttributeSetMap,\n} from \".\";\n\nconst MODULE_BASE_API = `${BASE_API}ETLAttributeSetMaps.`;\n\nexport const etlAttributeSetMapsApi = {\n  /** List etl attribute set maps */\n  async getList(\n    query?: IDataTableQuery,\n  ): Promise<IDataFetcherResponse<ITenantETLAttributeSetMap>> {\n    return httpClient.post(`${MODULE_BASE_API}get`, query);\n  },\n  /** Creates an ETL attribute set map */\n  async create(\n    entity: ICreateTenantETLAttributeSetMap,\n  ): Promise<ITenantETLAttributeSetMap> {\n    return httpClient.post(`${MODULE_BASE_API}create`, entity);\n  },\n  /** getMatchingETLAttributeSetMaps */\n  async getMatchingETLAttributeSetMaps(\n    destinationAttributeSetId: number,\n  ): Promise<IApiPayload<ITenantETLAttributeSetMap>> {\n    return httpClient.post(`${MODULE_BASE_API}getMatchingETLAttributeSetMaps`, {\n      destinationAttributeSetId,\n    });\n  },\n  /** remove entity */\n  async delete(id: number): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}delete`, { id });\n  },\n  /** rerunMapping */\n  async rerunMapping(\n    attributeMapId: number,\n    rerunManualMappings: boolean,\n  ): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}rerunMapping`, {\n      attributeMapId,\n      rerunManualMappings,\n    });\n  },\n  /** Start job to rerun all dependencies of an ETLAttributeSetMap */\n  async rerunMappings(\n    attributeSetMapId: number,\n    rerunManualMappings: boolean,\n  ): Promise<IApiSuccess> {\n    return httpClient.post(`${MODULE_BASE_API}rerunMappings`, {\n      attributeSetMapId,\n      rerunManualMappings,\n    });\n  },\n};\n","/* Configurations for tables */\nimport { computed } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport {\n  SORT_TYPE,\n  FILTER_TYPES,\n  ROW_SELECTION,\n  type ITable,\n  type ITableConfig,\n} from \"@actindo/core-ui\";\nimport {\n  IS_ACTIVE_STATUSES,\n  ETL_PROCESS_STATUSES,\n  CHANGE_TRACKING_MODE_STATUSES,\n  RESTARTABLE_ETL_PROCESS_STATUSES,\n} from \"@/constants\";\nimport type {\n  ITenantAttribute,\n  ITenantAttributeSetMap,\n} from \"@/services/api/DataHub/Attributes\";\nimport { deletedAttributesApi } from \"@/services/api/DataHub/DeletedAttributes\";\nimport { etlAttributeSetMapsApi } from \"@/services/api/DataHub/ETLAttributeSetMaps\";\nimport {\n  etlProcessesApi,\n  type ITenantETLProcess,\n} from \"@/services/api/DataHub/ETLProcesses\";\nimport {\n  dimensionsApi,\n  type ITenantDimension,\n} from \"@/services/api/DataHub/Dimensions\";\nimport { attributeSetsApi } from \"@/services/api/DataHub/AttributeSets\";\nimport {\n  etlAttributeMapsApi,\n  type IETLAttributeMapping,\n} from \"@/services/api/DataHub/ETLAttributeMaps\";\nimport type { ITenantUnit } from \"@/services/api/DataHub/Units\";\nimport {\n  getSource,\n  getDestination,\n  targetAttribute,\n  sourceAttributes,\n  getAttributeData,\n  etlProcessesFromTo,\n} from \"@/utils/helpers\";\n\nexport enum TABLE_ACTION {\n  DELETE = \"delete\",\n  RECOVER = \"recover\",\n  RESTART = \"restart\",\n  ADD_MAPPING = \"add mapping\",\n  EDIT_MAPPING = \"edit mapping\",\n  DELETE_MAPPING = \"delete mapping\",\n  RERUN_MAPPING = \"rerun mapping\",\n  ACTIVATE = \"activate\",\n  DEACTIVATE = \"deactivate\",\n}\n\nconst IS_ACTIVE_PROPS = {\n  filterable: FILTER_TYPES.LIST,\n  filterListValues: [\n    {\n      title: IS_ACTIVE_STATUSES.false.label,\n      value: false,\n    },\n    {\n      title: IS_ACTIVE_STATUSES.true.label,\n      value: true,\n    },\n  ],\n};\n\nexport const ATTRIBUTES_TABLE: ITableConfig = {\n  // data: attributesApi.getList, // moved to dictionaryStore\n  gridId: \"datahub-attributes\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: true,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: true,\n  routable: false,\n  tableActions: [\n    {\n      icon: \"delete\",\n      title: \"common.delete\",\n      color: \"alert\",\n      event: TABLE_ACTION.DELETE,\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n      ...IS_ACTIVE_PROPS,\n      sortable: true,\n    },\n    {\n      id: \"name\",\n      header: \"shared.name\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"key\",\n      header: \"shared.key\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"description\",\n      header: \"shared.description\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"dataType\",\n      header: \"shared.dataType\",\n      minWidth: 200,\n      accessor: (row: ITenantAttribute) =>\n        row.dataTypeInstance?.name ?? row.dataType,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"group.name\",\n      header: \"shared.group\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"scopable\",\n      header: \"shared.multiChannel\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"multilanguage\",\n      header: \"shared.multiLanguage\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"readOnly\",\n      header: \"shared.readOnly\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"ownerPluginName\",\n      header: \"shared.ownerPluginName\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const ATTRIBUTE_ASSIGNED_ATTRIBUTE_SETS_TABLE: ITableConfig = {\n  // data: attributesApi.listAttributeSetAssignments, // load data locally to reuse on adding new assignments\n  gridId: \"datahub-assigned-attribute-sets\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: true,\n  hideFilters: true,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: true,\n  routable: false,\n  tableActions: [\n    {\n      icon: \"delete\",\n      title: \"common.delete\",\n      color: \"alert\",\n      event: TABLE_ACTION.DELETE,\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"attributeSetName\",\n      header: \"attributes.attributeSetName\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"ownerPluginName\",\n      header: \"attributes.ownerPluginName\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"parentSetName\",\n      header: \"attributes.parentSetName\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"calculatedFromFields\",\n      header: \"attributes.calculatedFromFields\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"configTextSet\",\n      header: \"attributes.configTextSet\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"inherited\",\n      header: \"attributes.inherited\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"readOnly\",\n      header: \"shared.readOnly\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"requiredFlag\",\n      header: \"attributes.requiredFlag\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"uniqueFlag\",\n      header: \"attributes.uniqueFlag\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n  ],\n};\n\nexport const ATTRIBUTE_ASSIGN_NEW_SETS_LIST: ITableConfig = {\n  hideGlobalSearch: true,\n  minRowCount: 1,\n  canReorderRows: false,\n  hidePagination: true,\n  canReorderHeaders: false,\n  columns: [\n    {\n      id: \"attributeSetId\",\n      header: \"shared.name\",\n    },\n    {\n      id: \"requireFlag\",\n      header: \"attributes.requiredFlag\",\n    },\n  ],\n};\n\nexport const ATTRIBUTE_SET_ASSIGN_NEW_ATTRIBUTE_LIST: ITableConfig = {\n  hideGlobalSearch: true,\n  minRowCount: 1,\n  canReorderRows: false,\n  hidePagination: true,\n  canReorderHeaders: false,\n  columns: [\n    {\n      id: \"attributeId\",\n      header: \"shared.name\",\n    },\n    {\n      id: \"requireFlag\",\n      header: \"attributes.requiredFlag\",\n    },\n  ],\n};\n\nexport const ATTRIBUTE_SETS_TABLE: ITableConfig = {\n  // data: attributeSetsApi.getList, // moved to dictionaryStore\n  gridId: \"datahub-attribute-sets\",\n  rowSelection: ROW_SELECTION.NONE, // todo: BE can't delete it, so no actions there. rowSelection: ROW_SELECTION.MULTI\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: true,\n  routable: false,\n  // tableActions: [\n  //   {\n  //     // todo: BE returns \"Actindo.Modules.Actindo.DataHub.AttributeSets.delete\" - method not found (old UI too)\n  //     icon: \"delete\",\n  //     title: \"common.delete\",\n  //     color: \"alert\",\n  //     event: TABLE_ACTION.DELETE,\n  //     prepareIsDisabled: (table: ITable<object>) =>\n  //       computed(() => !table.selectedRows.value.length),\n  //   },\n  // ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n      ...IS_ACTIVE_PROPS,\n      sortable: true,\n    },\n    {\n      id: \"name\",\n      header: \"shared.name\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"key\",\n      header: \"shared.key\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"description\",\n      header: \"shared.description\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"readOnly\",\n      header: \"shared.readOnly\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"ownerPluginName\",\n      header: \"shared.ownerPluginName\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const ATTRIBUTE_SETS_ASSIGNED_ATTRIBUTES_TABLE: ITableConfig = {\n  data: attributeSetsApi.getAttributes,\n  gridId: \"datahub-assigned-attributes\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: true,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: true,\n  routable: false,\n  tableActions: [\n    {\n      title: \"attributeSet.addMapping\",\n      event: TABLE_ACTION.ADD_MAPPING,\n      variant: \"elevated\",\n      color: \"primary\",\n      prepareIsHidden: (table: ITable<ITenantAttributeSetMap>) =>\n        computed(\n          () =>\n            table.selectedRows.value.length !== 1 ||\n            table.selectedRows.value[0].calculatedFromFields,\n        ),\n    },\n    {\n      title: \"attributeSet.editMapping\",\n      event: TABLE_ACTION.EDIT_MAPPING,\n      variant: \"elevated\",\n      color: \"primary\",\n      prepareIsHidden: (table: ITable<ITenantAttributeSetMap>) =>\n        computed(\n          () =>\n            table.selectedRows.value.length !== 1 ||\n            !table.selectedRows.value[0].calculatedFromFields,\n        ),\n    },\n    {\n      title: \"attributeSet.deleteMapping\",\n      event: TABLE_ACTION.DELETE_MAPPING,\n      prepareIsHidden: (table: ITable<ITenantAttributeSetMap>) =>\n        computed(\n          () =>\n            table.selectedRows.value.length !== 1 ||\n            !table.selectedRows.value[0].calculatedFromFields,\n        ),\n    },\n    {\n      icon: \"delete\",\n      title: \"common.delete\",\n      color: \"alert\",\n      event: TABLE_ACTION.DELETE,\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"dhAttribute.name\",\n      header: \"shared.name\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"dhAttribute.key\",\n      header: \"shared.key\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"parentSetName\",\n      header: \"attributes.parentSetName\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"calculatedFromFields\",\n      header: \"attributes.calculatedFromFields\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"configTextSet\",\n      header: \"attributes.configTextSet\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"inherited\",\n      header: \"attributes.inherited\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"readOnly\",\n      header: \"shared.readOnly\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"requiredFlag\",\n      header: \"attributes.requiredFlag\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"uniqueFlag\",\n      header: \"attributes.uniqueFlag\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"ownerPluginName\",\n      header: \"attributes.ownerPluginName\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n  ],\n};\n\nexport const DELETED_ATTRIBUTES_TABLE: ITableConfig = {\n  data: deletedAttributesApi.getList,\n  gridId: \"datahub-deleted-attributes\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: false,\n  tableActions: [\n    {\n      title: \"deletedAttributes.recover\",\n      variant: \"elevated\",\n      color: \"primary\",\n      event: TABLE_ACTION.RECOVER,\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n    {\n      icon: \"delete\",\n      title: \"shared.deletePermanently\",\n      color: \"alert\",\n      event: TABLE_ACTION.DELETE,\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n      ...IS_ACTIVE_PROPS,\n      sortable: true,\n    },\n    {\n      id: \"renderFriendlyName\",\n      header: \"shared.name\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"key\",\n      header: \"shared.key\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"renderFriendlyDescription\",\n      header: \"shared.description\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"dataType\",\n      header: \"shared.dataType\",\n      minWidth: 200,\n      accessor: (row: ITenantAttribute) =>\n        row.dataTypeInstance?.name ?? row.dataType,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"readOnly\",\n      header: \"shared.readOnly\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"multilanguage\",\n      header: \"shared.multiLanguage\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"ownerPluginName\",\n      header: \"shared.ownerPluginName\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const ETL_TABLE: ITableConfig = {\n  data: etlAttributeSetMapsApi.getList,\n  gridId: \"datahub-etl\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: true,\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"sourceAttributeSet.name\",\n      header: \"elt.sourceAttributeSet\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"destinationAttributeSet.name\",\n      header: \"elt.destinationAttributeSet\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"scope.name\",\n      header: \"elt.fallbackChannel\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"language.description\",\n      header: \"elt.fallbackLanguage\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const ETL_ATTRIBUTES_TABLE: ITableConfig = {\n  data: etlAttributeMapsApi.getList,\n  gridId: \"datahub-etl-attributes\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: false,\n  lockedProperty: \"m.destinationAttributeNotMappable\",\n  tableActions: [\n    {\n      title: \"elt.rerunMapping\",\n      event: TABLE_ACTION.RERUN_MAPPING,\n      variant: \"elevated\",\n      color: \"primary\",\n      prepareIsHidden: (table: ITable<IETLAttributeMapping>) =>\n        computed(\n          () =>\n            table.selectedRows.value.length &&\n            (table.selectedRows.value.some(\n              ({ m }) => m.destinationAttributeNotMappable,\n            ) ||\n              table.selectedRows.value.every(({ em }) => !em)),\n        ),\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(\n          () =>\n            !table.selectedRows.value.length ||\n            table.selectedRows.value.some(({ em }) => !em),\n        ),\n    },\n    {\n      title: \"elt.addAndMap\",\n      event: TABLE_ACTION.ADD_MAPPING,\n      variant: \"elevated\",\n      color: \"primary\",\n      prepareIsHidden: (table: ITable<IETLAttributeMapping>) =>\n        computed(\n          () =>\n            !table.selectedRows.value.length ||\n            table.selectedRows.value.some(\n              ({ em, m }) => em || m.destinationAttributeNotMappable,\n            ),\n        ),\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n    {\n      icon: \"delete\",\n      title: \"common.delete\",\n      event: TABLE_ACTION.DELETE,\n      color: \"alert\",\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(\n          () =>\n            !table.selectedRows.value.length ||\n            table.selectedRows.value.some(({ em }) => !em),\n        ),\n    },\n  ],\n  columns: [\n    {\n      id: \"sourceAttribute\",\n      header: \"elt.sourceAttribute\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n      accessor: (row: IETLAttributeMapping) => {\n        const value = row.em?.sourcePorts;\n        if (!value?.length) {\n          return useI18n().t(\"elt.emptySourceAttribute\");\n        }\n\n        return value\n          .map((attr) => getAttributeData(attr) + getSource(attr))\n          .join(\", \");\n      },\n    },\n    {\n      id: \"extension\",\n      header: \"elt.extension\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n      accessor: (row: IETLAttributeMapping) => {\n        const value = row.em?.extensionName;\n        const trackingMode =\n          CHANGE_TRACKING_MODE_STATUSES[row.em?.overrideChangeTrackingMode];\n\n        return !value\n          ? \"\"\n          : value + (trackingMode ? ` (${useI18n().t(trackingMode)})` : \"\");\n      },\n    },\n    {\n      id: \"destinationAttribute\",\n      header: \"elt.destinationAttribute\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n      accessor: (row: IETLAttributeMapping) => {\n        return `${row.a.name} ${getDestination(row.em)}`;\n      },\n    },\n    {\n      id: \"a.active\",\n      header: \"shared.isActive\",\n      width: 200,\n      renderer: \"IsActiveStatusCell\",\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"m.destinationAttributeNotMappable\",\n      header: \"elt.notMappable\",\n      width: 200,\n      renderer: \"CheckboxCell\",\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const ETL_PROCESSES_TABLE: ITableConfig = {\n  data: etlProcessesApi.getList,\n  gridId: \"datahub-etl-processes\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: false,\n  routable: false,\n  tableActions: [\n    {\n      icon: \"restart_alt\",\n      title: \"eltProcesses.restart\",\n      variant: \"elevated\",\n      color: \"primary\",\n      event: TABLE_ACTION.RESTART,\n      prepareIsDisabled: (table: ITable<ITenantETLProcess>) =>\n        computed(\n          () =>\n            !table.selectedRows.value.length ||\n            table.selectedRows.value.some(\n              ({ status }) =>\n                !RESTARTABLE_ETL_PROCESS_STATUSES.includes(status),\n            ),\n        ),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"status\",\n      header: \"shared.status\",\n      renderer: \"EtlProcessStatusCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.LIST,\n      filterListValues: Object.entries(ETL_PROCESS_STATUSES).map(\n        ([value, { label }]) => ({ value, title: label }),\n      ),\n      sortable: true,\n    },\n    {\n      id: \"fromTo\",\n      header: \"eltProcesses.fromTo\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n      accessor: etlProcessesFromTo,\n    },\n\n    {\n      id: \"etlAttributeMap.sourcePorts\",\n      header: \"eltProcesses.sourceAttributes\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n      accessor: sourceAttributes,\n    },\n    {\n      id: \"etlAttributeMap.destinationType\",\n      header: \"eltProcesses.targetAttribute\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n      accessor: targetAttribute,\n    },\n    {\n      id: \"destinationLanguage.description\",\n      header: \"eltProcesses.destinationLanguage\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"destinationScope.name\",\n      header: \"eltProcesses.destinationChannel\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"accepted\",\n      header: \"eltProcesses.accepted\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"acceptedBy\",\n      header: \"eltProcesses.acceptedBy\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"createdBy\",\n      header: \"eltProcesses.createdBy\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"error\",\n      header: \"eltProcesses.error\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n  ],\n};\n\nexport const CHANNELS_TABLE: ITableConfig = {\n  // data: scopesApi.getList, // moved to dictionaryStore\n  gridId: \"datahub-channels\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: true,\n  routable: false,\n  tableActions: [\n    {\n      icon: \"delete\",\n      title: \"common.delete\",\n      color: \"alert\",\n      event: TABLE_ACTION.DELETE,\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n      ...IS_ACTIVE_PROPS,\n      sortable: true,\n    },\n    {\n      id: \"name\",\n      header: \"shared.name\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"key\",\n      header: \"shared.key\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"description\",\n      header: \"shared.description\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const LANGUAGES_TABLE: ITableConfig = {\n  // data: languagesApi.getList, // moved to dictionaryStore\n  gridId: \"datahub-languages\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: true,\n  routable: false,\n  tableActions: [\n    {\n      icon: \"delete\",\n      title: \"common.delete\",\n      color: \"alert\",\n      event: TABLE_ACTION.DELETE,\n      prepareIsDisabled: (table: ITable<object>) =>\n        computed(() => !table.selectedRows.value.length),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n      ...IS_ACTIVE_PROPS,\n      sortable: true,\n    },\n    {\n      id: \"key\",\n      header: \"shared.key\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"normalizedKey\",\n      header: \"languages.normalizedKey\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"description\",\n      header: \"shared.description\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const DIMENSIONS_TABLE: ITableConfig = {\n  data: dimensionsApi.getList,\n  gridId: \"datahub-dimensions\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: false,\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n      ...IS_ACTIVE_PROPS,\n      sortable: true,\n    },\n    {\n      id: \"name\",\n      header: \"shared.name\",\n      minWidth: 200,\n      filterable: false,\n      sortable: true,\n    },\n    {\n      id: \"units\",\n      header: \"dimensions.units\",\n      minWidth: 200,\n      filterable: false,\n      sortable: false,\n      accessor: (row: ITenantDimension) => {\n        const base = row.baseUnit.symbol ?? \"\";\n        const units = row.units\n          .map(({ id, symbol }) => id !== row.baseUnit.id && symbol)\n          .filter(Boolean)\n          .join(\", \");\n        return { base, units };\n      },\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const DIMENSION_UNITS_TABLE: ITableConfig = {\n  // data: dimensionsApi.getList,\n  gridId: \"datahub-dimension-units\",\n  rowSelection: ROW_SELECTION.MULTI,\n  hideGlobalSearch: false,\n  hideFilters: false,\n  hideColumnCustomization: false,\n  hidePagination: false,\n  sortType: SORT_TYPE.SINGLE,\n  createActions: false,\n  tableActions: [\n    {\n      title: \"dimensions.activate\",\n      variant: \"elevated\",\n      color: \"primary\",\n      event: TABLE_ACTION.ACTIVATE,\n      prepareIsDisabled: (table: ITable<ITenantUnit>) =>\n        computed(() => {\n          return (\n            !table.selectedRows.value.length ||\n            table.selectedRows.value.every(({ active }) => active)\n          );\n        }),\n      prepareIsHidden: (table: ITable<ITenantUnit>) =>\n        computed(\n          () =>\n            table.selectedRows.value.length &&\n            table.selectedRows.value.every(({ active }) => active),\n        ),\n    },\n    {\n      title: \"dimensions.deactivate\",\n      variant: \"elevated\",\n      color: \"primary\",\n      event: TABLE_ACTION.DEACTIVATE,\n      prepareIsDisabled: (table: ITable<ITenantUnit>) =>\n        computed(\n          () =>\n            !table.selectedRows.value.length ||\n            table.selectedRows.value.every(({ active }) => !active),\n        ),\n      prepareIsHidden: (table: ITable<ITenantUnit>) =>\n        computed(\n          () =>\n            !table.selectedRows.value.length ||\n            table.selectedRows.value.some(({ active }) => !active),\n        ),\n    },\n  ],\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      isVisible: false,\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n      ...IS_ACTIVE_PROPS,\n      sortable: true,\n    },\n    {\n      id: \"name\",\n      header: \"shared.name\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"symbol\",\n      header: \"dimensions.symbol\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"factor\",\n      header: \"dimensions.factor\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.STRING,\n      sortable: true,\n    },\n    {\n      id: \"isBaseUnit\",\n      header: \"dimensions.baseUnit\",\n      renderer: \"CheckboxCell\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.BOOLEAN,\n      sortable: true,\n    },\n    {\n      id: \"dimensionId\",\n      header: \"dimensions.dimensionId\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.NUMERIC,\n      sortable: true,\n    },\n    {\n      id: \"created\",\n      header: \"shared.created\",\n      minWidth: 200,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"createdByUsername\",\n      header: \"shared.createdByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n    {\n      id: \"modified\",\n      header: \"shared.modified\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: FILTER_TYPES.DATE,\n      sortable: true,\n    },\n    {\n      id: \"modifiedByUsername\",\n      header: \"shared.modifiedByUsername\",\n      minWidth: 200,\n      isVisible: false,\n      filterable: false,\n      sortable: false,\n    },\n  ],\n};\n\nexport const GROUP_ATTRIBUTES_LIST: ITableConfig = {\n  // data: groupsApi.getAttributes,\n  gridId: \"datahub-group-attributes\",\n  hideGlobalSearch: false,\n  minRowCount: 1,\n  hidePagination: true,\n  canReorderHeaders: false,\n  columns: [\n    {\n      id: \"id\",\n      header: \"common.id\",\n      minWidth: 200,\n    },\n    {\n      id: \"active\",\n      header: \"shared.status\",\n      renderer: \"IsActiveStatusCell\",\n      minWidth: 100,\n      width: 150,\n    },\n    {\n      id: \"key\",\n      header: \"shared.key\",\n      minWidth: 200,\n    },\n    {\n      id: \"name\",\n      header: \"shared.name\",\n      minWidth: 200,\n    },\n    {\n      id: \"description\",\n      header: \"shared.description\",\n      minWidth: 200,\n    },\n    {\n      id: \"ownerPluginName\",\n      header: \"shared.ownerPluginName\",\n      minWidth: 200,\n    },\n    {\n      id: \"readOnly\",\n      header: \"shared.readOnly\",\n      renderer: \"CheckboxCell\",\n      width: 150,\n    },\n  ],\n};\n\nexport const TREE_VIEW_LIST: ITableConfig = {\n  minRowCount: 0,\n  hidePagination: true,\n  canReorderHeaders: false,\n  hideNoData: true,\n  hideRemove: true,\n  rowHeight: \"auto\",\n  columns: [\n    {\n      id: \"item\",\n      header: \"\",\n    },\n  ],\n};\n","import { useI18n } from \"vue-i18n\";\nimport { helpers } from \"@vuelidate/validators\";\nimport { Ref } from \"vue\";\n\nexport const isRegExValid = (regex: RegExp, value: string) => {\n  if (!value) {\n    return true;\n  }\n  return regex.test(value) && !value.includes(\"__\");\n};\n\nexport const KEY_VALIDATOR = (\n  regex: RegExp,\n  errorMessage = \"shared.invalidKeyPattern\",\n) =>\n  helpers.withMessage(useI18n().t(errorMessage), (value: string) => {\n    if (!value) {\n      return true;\n    }\n    return regex.test(value) && !value.includes(\"__\");\n  });\n\nexport const keyFieldValidation = (key: Ref<string>, pattern: RegExp) => () => {\n  if (!key.value) {\n    return \"common.mandatoryField\";\n  }\n\n  return pattern && !isRegExValid(pattern, key.value)\n    ? \"shared.invalidKeyPattern\"\n    : \"\";\n};\n","<script setup lang=\"ts\">\nimport { computed, ref, watch } from \"vue\";\nimport { ABtn, AAlert, ATextField, ABaseDialog } from \"@actindo/core-ui\";\nimport { keyFieldValidation } from \"@/utils/validation\";\nimport { KEY_PATTERN } from \"@/constants\";\n\nconst props = withDefaults(\n  defineProps<{\n    editable?: boolean;\n    readonly?: boolean;\n    loading?: boolean;\n    label?: string;\n    title?: string;\n    warning?: string;\n    pattern?: RegExp;\n  }>(),\n  {\n    label: \"shared.key\",\n    title: \"shared.updateKeyTitle\",\n    warning: \"shared.updateKeyWarning\",\n    pattern: KEY_PATTERN,\n  },\n);\n\nconst emit = defineEmits<{\n  (event: \"updated\", value: string): void;\n  (event: \"validation\", invalid: boolean): void;\n}>();\n\nconst keyValue = defineModel<string>();\n\nconst isVisible = ref(false);\nconst localValue = ref(\"\");\n\nconst errorMessage = computed(keyFieldValidation(localValue, props.pattern));\nconst errorMessageProps = computed(keyFieldValidation(keyValue, props.pattern));\n\nfunction onSubmit() {\n  keyValue.value = localValue.value;\n  isVisible.value = false;\n  emit(\"updated\", localValue.value);\n}\n\nwatch(errorMessageProps, (hasError) => emit(\"validation\", Boolean(hasError)), {\n  immediate: true,\n});\n\nwatch(\n  keyValue,\n  (value) => {\n    localValue.value = value;\n  },\n  { immediate: true },\n);\n</script>\n\n<template>\n  <div class=\"d-flex justify-space-between\">\n    <ATextField\n      v-model=\"keyValue\"\n      :label=\"$t(label)\"\n      :readonly=\"readonly && !editable\"\n      :error-messages=\"errorMessageProps && $t(errorMessageProps)\"\n    />\n    <ABtn\n      v-if=\"!readonly && !editable\"\n      class=\"ml-4\"\n      icon=\"edit\"\n      variant=\"text\"\n      :disabled=\"loading\"\n      @click=\"isVisible = true\"\n    />\n    <ABaseDialog\n      v-model=\"isVisible\"\n      :title=\"$t(title)\"\n      min-width=\"600px\"\n      max-width=\"800px\"\n    >\n      <template #actions>\n        <ABtn\n          variant=\"elevated\"\n          :text=\"$t('shared.save')\"\n          :disabled=\"Boolean(errorMessage)\"\n          @click=\"onSubmit\"\n        />\n      </template>\n\n      <AAlert icon=\"warning\" type=\"error\" class=\"mb-4\">\n        {{ $t(warning) }}\n      </AAlert>\n      <ATextField\n        v-model=\"localValue\"\n        :label=\"$t(label)\"\n        :error-messages=\"errorMessage && $t(errorMessage)\"\n      />\n    </ABaseDialog>\n  </div>\n</template>\n","<script\n  setup\n  lang=\"ts\"\n  generic=\"T extends { key: string; name?: string; title?: string }\"\n>\nimport { computed, ref, watch } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport {\n  ABtn,\n  ACol,\n  ARow,\n  AContainer,\n  AColumnItem,\n  MultiLangScopeEditorsList,\n  type ITreeNode,\n} from \"@actindo/core-ui\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ICacheEntitiesAttributeInSetCache } from \"@/services/api/DataHub/Attributes\";\nimport KeyTextField from \"@/components/KeyTextField.vue\";\nimport { keyFieldValidation } from \"@/utils/validation\";\nimport { KEY_PATTERN } from \"@/constants\";\n\nconst props = defineProps<{\n  node: ITreeNode<T>;\n  active: boolean;\n  remoteScopes?: ITenantAttributeScope[];\n  remoteLanguages?: ITenantAttributeLanguage[];\n  remoteAttributes?: ICacheEntitiesAttributeInSetCache[];\n}>();\n\nconst emit = defineEmits<{\n  (event: \"save\", value: T): void;\n  (event: \"delete\");\n}>();\n\nconst { locale } = useI18n();\n\nconst isEditing = ref(false);\nconst localNode = ref<T>();\nconst keyValue = computed(() => localNode.value?.key);\nconst errorMessage = computed(keyFieldValidation(keyValue, KEY_PATTERN));\n\nconst titleColor = computed(() => (errorMessage.value ? \"text-error\" : \"\"));\nconst bgColor = computed(() => (props.active ? \"selected\" : undefined));\n\nfunction saveNode() {\n  isEditing.value = false;\n  const activeLocale = locale.value.replace(\"-\", \"_\");\n  const nameField = `_datahub_translatable_name__${activeLocale}`;\n  const translatedName = localNode.value[nameField];\n  localNode.value.title = translatedName;\n  localNode.value.name = translatedName;\n\n  emit(\"save\", localNode.value);\n}\n\nfunction resetLocalNode() {\n  localNode.value = { ...props.node };\n  isEditing.value = false;\n}\n\nwatch(() => props.node, resetLocalNode, { immediate: true });\n</script>\n\n<template>\n  <AColumnItem :bg-color=\"bgColor\" collapse-icon=\"\" expand-icon=\"\" class=\"my-2\">\n    <template #title=\"{ expanded }\">\n      <div class=\"d-flex w-100 align-center overflow-hidden\">\n        <div class=\"flex-grow-1 text-truncate\" :class=\"titleColor\">\n          <slot name=\"title\" :node=\"node\" :active=\"active\" />\n        </div>\n        <div>\n          <template v-if=\"isEditing\">\n            <ABtn\n              :text=\"$t('common.saveChanges')\"\n              variant=\"text\"\n              color=\"primary\"\n              :disabled=\"Boolean(errorMessage)\"\n              @click.stop=\"saveNode\"\n            />\n            <ABtn icon=\"cancel\" variant=\"text\" @click.stop=\"resetLocalNode\" />\n          </template>\n          <ABtn\n            v-else-if=\"expanded\"\n            icon=\"edit\"\n            variant=\"text\"\n            @click.stop=\"isEditing = true\"\n          />\n          <ABtn\n            icon=\"delete\"\n            variant=\"text\"\n            color=\"alert\"\n            @click.stop=\"$emit('delete')\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <div v-if=\"localNode\" class=\"text-wrap\">\n      <AContainer fluid>\n        <ARow>\n          <ACol>\n            <KeyTextField\n              v-model=\"localNode.key\"\n              :readonly=\"!isEditing\"\n              :editable=\"isEditing\"\n            />\n          </ACol>\n          <template\n            v-if=\"\n              remoteAttributes?.length &&\n              (remoteLanguages?.length || remoteScopes?.length)\n            \"\n          >\n            <MultiLangScopeEditorsList\n              v-model=\"localNode\"\n              :attributes=\"remoteAttributes\"\n              :scopes=\"remoteScopes\"\n              :languages=\"remoteLanguages\"\n              :readonly=\"!isEditing\"\n            />\n          </template>\n          <slot :node=\"node\" :active=\"active\" />\n        </ARow>\n      </AContainer>\n    </div>\n  </AColumnItem>\n</template>\n","<script\n  setup\n  lang=\"ts\"\n  generic=\"T extends { id?: number; key: string; name: string }\"\n>\nimport { computed, ref } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport {\n  AColumn,\n  ActindoDataList,\n  type IDataTableQuery,\n} from \"@actindo/core-ui\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ICacheEntitiesAttributeInSetCache } from \"@/services/api/DataHub/Attributes\";\nimport { TREE_VIEW_LIST } from \"@/constants/tables\";\nimport TreeViewItem from \"./TreeViewItem.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    title?: string;\n    remoteScopes?: ITenantAttributeScope[];\n    remoteLanguages?: ITenantAttributeLanguage[];\n    remoteAttributes?: ICacheEntitiesAttributeInSetCache[];\n    active?: number;\n    level?: number | string;\n    loading: boolean;\n    filterPredicate?: (filter: string) => (value: T) => boolean;\n    addTitle?: string;\n    itemId?: keyof T;\n  }>(),\n  {\n    title: undefined,\n    remoteScopes: undefined,\n    remoteLanguages: undefined,\n    remoteAttributes: undefined,\n    active: undefined,\n    level: undefined,\n    filterPredicate: undefined,\n    addTitle: undefined,\n    itemId: \"id\",\n  },\n);\n\nconst emit = defineEmits<{\n  (event: \"create\"): void;\n  (event: \"selected\", value?: T): void;\n  (event: \"delete\", value: T): void;\n}>();\n\nconst nodes = defineModel<T[]>();\n\nconst { t } = useI18n();\n\nconst nodeFilter = ref(\"\");\n\nconst filteredNodes = computed({\n  get: () => {\n    if (!nodeFilter.value || !props.filterPredicate) {\n      return nodes.value;\n    }\n    const filterFn = props.filterPredicate(nodeFilter.value);\n\n    return nodes.value.filter(filterFn);\n  },\n  set: (value) => {\n    nodes.value = value;\n  },\n});\n\nconst tableProps = computed(() => ({\n  tableName: props.title\n    ? t(props.title)\n    : t(\"datahub-plugin.treeView.levelN\", { level: props.level ?? 1 }),\n  isLoading: props.loading,\n  createActions: [\n    {\n      title: props.addTitle ? t(props.addTitle) : undefined,\n      icon: \"add_circle\",\n    },\n  ],\n  canReorderRows: !nodeFilter.value,\n  hideGlobalSearch: !props.filterPredicate,\n  ...TREE_VIEW_LIST,\n}));\n\nfunction filterNodes({ query }: IDataTableQuery) {\n  nodeFilter.value = query?.trim().toLocaleLowerCase();\n  if (nodeFilter.value) {\n    emit(\"selected\");\n  }\n}\n\nfunction updateNode(rowIndex: number, updatedNode: T) {\n  nodes.value = nodes.value.map((node, index) =>\n    index !== rowIndex ? node : { ...node, ...updatedNode, updated: true },\n  );\n}\n</script>\n\n<template>\n  <AColumn class=\"pr-5 mr-1\">\n    <ActindoDataList\n      v-model:data=\"filteredNodes\"\n      v-bind=\"tableProps\"\n      @clicked-row=\"$emit('selected', $event)\"\n      @create=\"$emit('create')\"\n      @recalculate=\"filterNodes\"\n    >\n      <template\n        #cell-item=\"{\n          rowIndex,\n          row,\n          isLoading,\n        }: {\n          rowIndex: number;\n          row: T;\n          isLoading: boolean;\n        }\"\n      >\n        <slot\n          v-if=\"isLoading\"\n          name=\"item-loading\"\n          :node=\"row\"\n          :active=\"row[itemId] === active\"\n        />\n        <TreeViewItem\n          v-else\n          :node=\"row\"\n          :active=\"row[itemId] === active\"\n          :remote-scopes=\"remoteScopes\"\n          :remote-languages=\"remoteLanguages\"\n          :remote-attributes=\"remoteAttributes\"\n          @delete=\"$emit('delete', row)\"\n          @save=\"updateNode(rowIndex, $event)\"\n        >\n          <template #title=\"{ node, active: isActive }\">\n            <slot name=\"item-title\" :node=\"node\" :active=\"isActive\" />\n          </template>\n\n          <template #default=\"{ node, active: isActive }\">\n            <slot name=\"item-content\" :node=\"node\" :active=\"isActive\" />\n          </template>\n        </TreeViewItem>\n      </template>\n    </ActindoDataList>\n  </AColumn>\n</template>\n","<script setup lang=\"ts\" generic=\"T extends object\">\nimport { computed, ref } from \"vue\";\nimport { AColumnsList, type ITreeNode } from \"@actindo/core-ui\";\nimport TreeViewColumn from \"./TreeViewColumn.vue\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ICacheEntitiesAttributeInSetCache } from \"@/services/api/DataHub/Attributes\";\n\nconst props = withDefaults(\n  defineProps<{\n    remoteScopes?: ITenantAttributeScope[];\n    remoteLanguages?: ITenantAttributeLanguage[];\n    remoteAttributes?: ICacheEntitiesAttributeInSetCache[];\n    loading: boolean;\n    filterPredicate?: (filter: string) => (value: T) => boolean;\n    addTitle?: string;\n    itemId?: keyof ITreeNode<T>;\n    maxLevel?: number;\n    createItem: (nodes: ITreeNode<T>[]) => ITreeNode<T>;\n  }>(),\n  {\n    remoteScopes: undefined,\n    remoteLanguages: undefined,\n    remoteAttributes: undefined,\n    api: undefined,\n    filterPredicate:\n      (filter: string) =>\n      ({ key, name }: ITreeNode<T & { key: string; name: string }>) =>\n        key?.includes(filter) || name?.toLocaleLowerCase().includes(filter),\n    addTitle: undefined,\n    itemId: \"id\",\n    maxLevel: Infinity,\n  },\n);\n\nconst emit = defineEmits<{\n  (event: \"updated\"): void;\n  (event: \"selected\", value: ITreeNode<T>, level: number): void;\n  (event: \"delete\", value: ITreeNode<T>): void;\n}>();\n\nconst rootNodes = defineModel<ITreeNode<T>[]>({ default: () => [] });\n\nconst selectedIds = ref<number[]>([]);\n\nconst selectedNodes = computed(() =>\n  selectedIds.value\n    .reduce(\n      (result, id) => {\n        const selectedGroup = result\n          .at(-1)\n          ?.find((node) => node[props.itemId] === id);\n        if (selectedGroup?.children) {\n          result.push(selectedGroup.children);\n        }\n\n        return result;\n      },\n      [rootNodes.value],\n    )\n    .slice(0, props.maxLevel),\n);\n\nfunction selectNode(node: ITreeNode<T>, level: number) {\n  if (node && !node.children) {\n    node.children = [];\n  }\n  selectedIds.value = selectedIds.value\n    .slice(0, level)\n    .concat(node[props.itemId] as number)\n    .slice(0, props.maxLevel);\n  emit(\"selected\", node, level);\n}\n\nfunction createNode(index: number) {\n  const item = props.createItem(selectedNodes.value[index]);\n  selectNode(item, index);\n}\n\nfunction updateNodes(nodes: ITreeNode<T>[], level: number) {\n  emit(\"updated\");\n  if (!level) {\n    rootNodes.value = nodes;\n    return;\n  }\n\n  const id = selectedIds.value[level - 1];\n  const parentNode = selectedNodes.value[level - 1].find(\n    (node) => node[props.itemId] === id,\n  );\n  if (parentNode) {\n    parentNode.children = nodes;\n  }\n}\n\nfunction deleteNode(deleted: ITreeNode<T>, level: number) {\n  emit(\"delete\", deleted);\n  if (!level) {\n    rootNodes.value = rootNodes.value.filter(\n      (node) => node[props.itemId] !== deleted[props.itemId],\n    );\n    return;\n  }\n\n  const id = selectedIds.value[level - 1];\n  const parentNode = selectedNodes.value[level - 1].find(\n    (node) => node[props.itemId] === id,\n  );\n  if (parentNode) {\n    parentNode.children = parentNode.children?.filter(\n      (node) => node[props.itemId] !== deleted[props.itemId],\n    );\n  }\n}\n</script>\n\n<template>\n  <AColumnsList class=\"tree-view-list pa-6\">\n    <template v-for=\"(currentNodes, index) of selectedNodes\" :key=\"index\">\n      <TreeViewColumn\n        :model-value=\"currentNodes\"\n        :remote-scopes=\"remoteScopes\"\n        :remote-languages=\"remoteLanguages\"\n        :remote-attributes=\"remoteAttributes\"\n        :active=\"selectedIds[index]\"\n        :level=\"index + 1\"\n        :loading=\"loading\"\n        :filter-predicate=\"filterPredicate\"\n        :add-title=\"addTitle\"\n        :item-id=\"itemId\"\n        class=\"tree-view\"\n        @update:model-value=\"updateNodes($event, index)\"\n        @create=\"createNode(index)\"\n        @selected=\"selectNode($event, index)\"\n        @delete=\"deleteNode($event, index)\"\n      >\n        <template v-for=\"(_, slot) of $slots\" #[slot]=\"scope\">\n          <slot :key=\"slot\" :name=\"slot\" v-bind=\"scope\" />\n        </template>\n      </TreeViewColumn>\n    </template>\n  </AColumnsList>\n</template>\n\n<style scoped lang=\"scss\">\n.tree-view-list {\n  --column-width: 568px;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ASkeletonLoader } from \"@actindo/core-ui\";\n</script>\n\n<template>\n  <div class=\"d-flex align-center my-2\">\n    <ASkeletonLoader type=\"icon\" width=\"24\" height=\"24\" class=\"mr-3\" />\n    <ASkeletonLoader width=\"380\" height=\"60\" class=\"mr-3\" />\n    <ASkeletonLoader type=\"icon\" width=\"24\" height=\"24\" />\n    <slot />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport type { AxiosError } from \"axios\";\nimport { ACol, ACheckbox } from \"@actindo/core-ui\";\nimport type { INode } from \"@/models\";\nimport type { ITreeDelete } from \"@/services/api/common\";\nimport type {\n  ITenantAttribute,\n  IDataTypeInstance,\n  ICacheEntitiesAttributeInSetCache,\n} from \"@/services/api/DataHub/Attributes\";\nimport type { ITenantAttributeLanguage } from \"@/services/api/DataHub/Languages\";\nimport type { ITenantAttributeScope } from \"@/services/api/DataHub/Scopes\";\nimport type { IDataTypesTreeNodeValueConfiguration } from \"./models\";\nimport {\n  treeNodeValueControllerApi,\n  type ITenantTreeNode,\n} from \"@/services/api/DataHub/TreeNodeValueController\";\nimport {\n  getUniqId,\n  mapGroupToNode,\n  collectCreated,\n  collectModified,\n} from \"@/utils/helpers\";\nimport TreeView from \"@/components/TreeView/TreeView.vue\";\nimport TreeItemLoading from \"@/components/TreeView/TreeItemLoading.vue\";\nimport TreeItemTitle from \"@/components/TreeView/TreeItemTitle.vue\";\nimport { TRANSLATABLE_KEY, TREE_NODE_ATTRIBUTES } from \"@/constants\";\n\nconst props = defineProps<{\n  attribute: ITenantAttribute;\n  dataTypeInstance: IDataTypeInstance<IDataTypesTreeNodeValueConfiguration>;\n  remoteScopes?: ITenantAttributeScope[];\n  remoteLanguages?: ITenantAttributeLanguage[];\n  remoteAttributes?: ICacheEntitiesAttributeInSetCache[];\n  readonly?: boolean;\n}>();\n\nconst configuration = defineModel<IDataTypesTreeNodeValueConfiguration>();\n\nconst { locale } = useI18n();\n\nconst nodes = ref<INode<ITenantTreeNode>[]>([]);\nconst isLoading = ref(false);\nconst isChanged = ref(false);\nconst deletedNodes = ref<ITreeDelete[]>([]);\nconst tree = computed(() => {\n  const activeLocale = locale.value.replace(\"-\", \"_\");\n  return {\n    0: {\n      // scopeId\n      0: {\n        // languageId\n        created: collectCreated(nodes.value, activeLocale, TRANSLATABLE_KEY),\n        modified: collectModified(nodes.value, activeLocale, TRANSLATABLE_KEY),\n        deleted: deletedNodes.value,\n      },\n    },\n  };\n});\n\nfunction createNode(list: INode<ITenantTreeNode>[]) {\n  isChanged.value = true;\n  const id = getUniqId(nodes.value);\n  const newNode = {\n    id,\n    title: \"\",\n    children: [],\n    name: \"\",\n    active: true,\n  } as unknown as INode<ITenantTreeNode>;\n  list.push(newNode);\n  return newNode;\n}\n\nfunction deleteNode({ id }: INode<ITenantTreeNode>) {\n  isChanged.value = true;\n  deletedNodes.value.push({ id });\n}\n\nwatch(\n  () => props.attribute?.id,\n  async (attributeId) => {\n    if (!attributeId) {\n      return;\n    }\n\n    try {\n      isLoading.value = true;\n      const { children } = await treeNodeValueControllerApi.getCategoryTree({\n        attributeId,\n        languageId: 0,\n        scopeId: 0,\n        serializeTranslations: true,\n      });\n      nodes.value = children.map(mapGroupToNode);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.log((err as AxiosError).message);\n    } finally {\n      isLoading.value = false;\n    }\n  },\n  { immediate: true },\n);\n\nwatch(tree, (value) => {\n  configuration.value.tree = value;\n});\n</script>\n\n<template>\n  <ACol>\n    <ACheckbox\n      v-model=\"configuration.readOnly\"\n      :label=\"$t('datahub-plugin.stringValue.readOnly')\"\n      :readonly=\"readonly\"\n    />\n  </ACol>\n  <ACol>\n    <ACheckbox\n      v-model=\"configuration.multiSelect\"\n      :label=\"$t('datahub-plugin.treeView.multiSelect')\"\n      :readonly=\"readonly\"\n    />\n  </ACol>\n  <ACol>\n    <ACheckbox\n      v-model=\"configuration.flat\"\n      :label=\"$t('datahub-plugin.treeView.flat')\"\n      :readonly=\"readonly\"\n    />\n  </ACol>\n\n  <ACol class=\"pa-0\">\n    <TreeView\n      v-model=\"nodes\"\n      :remote-scopes=\"remoteScopes\"\n      :remote-languages=\"remoteLanguages\"\n      :remote-attributes=\"TREE_NODE_ATTRIBUTES\"\n      :max-level=\"configuration.flat ? 1 : Infinity\"\n      :loading=\"isLoading\"\n      :create-item=\"createNode\"\n      class=\"group-tree-view\"\n      @updated=\"isChanged = true\"\n      @delete=\"deleteNode\"\n    >\n      <template #item-loading>\n        <TreeItemLoading />\n      </template>\n\n      <template #item-title=\"{ node, active }\">\n        <TreeItemTitle :node=\"node\" :active=\"active\" />\n      </template>\n    </TreeView>\n  </ACol>\n</template>\n","export enum DATAHUB_COMPONENT_TYPE {\n  RENDER,\n  VALUE,\n  CONFIG,\n  ETL_CONFIG,\n}\n","<script\n  setup\n  lang=\"ts\"\n  generic=\"\n    T = unknown,\n    C extends\n      IDataTypesAttributeConfigurationAbstract = IDataTypesAttributeConfigurationAbstract\n  \"\n>\nimport type { IDataTypesAttributeConfigurationAbstract } from \"@/services/api/common\";\nimport { DATAHUB_COMPONENT_TYPE } from \"./constants\";\nimport DatahubExternalComponent from \"./DatahubExternalComponent.vue\";\nimport type { IDatahubDataTypeEditorProps } from \"./models\";\n\nconst props = defineProps<IDatahubDataTypeEditorProps<T, C>>();\n\nconst configuration = defineModel<T>();\n</script>\n\n<template>\n  <DatahubExternalComponent\n    v-model=\"configuration\"\n    :type=\"DATAHUB_COMPONENT_TYPE.VALUE\"\n    v-bind=\"props\"\n  />\n</template>\n","<script setup lang=\"ts\">\nimport { watch } from \"vue\";\nimport type { IDataTypesAttributeConfigurationAbstract } from \"@/services/api/common\";\nimport DatahubDataTypeEditor from \"../DatahubDataTypeEditor.vue\";\nimport type { IExtensionProps } from \"./models\";\n\ninterface IConstantConfig extends IDataTypesAttributeConfigurationAbstract {\n  constValue: unknown;\n  value: unknown;\n}\n\nconst props = defineProps<IExtensionProps<IConstantConfig>>();\n\nconst configuration = defineModel<IConstantConfig>();\n\nwatch(\n  () => configuration.value.constValue,\n  (value) => {\n    configuration.value.value = value;\n  },\n  { immediate: true },\n);\n</script>\n\n<template>\n  <DatahubDataTypeEditor\n    v-model=\"configuration.constValue\"\n    :attribute=\"props.attributeMapping.a\"\n    :data-type-instance=\"props.attributeMapping.a.dataTypeInstance\"\n    :label=\"String(props.attributeMapping.a.id)\"\n  />\n</template>\n","import DatahubDataTypeDateTimeValueConfiguration from \"@/components/dataTypes/DateTimeValue/DatahubDataTypeDateTimeValueConfiguration.vue\";\nimport DatahubDataTypeDoubleFloatValueConfiguration from \"@/components/dataTypes/DoubleFloatValue/DatahubDataTypeDoubleFloatValueConfiguration.vue\";\nimport DatahubDataTypeFloatValueConfiguration from \"@/components/dataTypes/FloatValue/DatahubDataTypeFloatValueConfiguration.vue\";\nimport DatahubDataTypeIntegerValueConfiguration from \"@/components/dataTypes/IntegerValue/DatahubDataTypeIntegerValueConfiguration.vue\";\nimport DatahubDataTypeSimplePricingValueConfiguration from \"@/components/dataTypes/SimplePricingValue/DatahubDataTypeSimplePricingValueConfiguration.vue\";\nimport DatahubDataTypeStockValueConfiguration from \"@/components/dataTypes/StockValue/DatahubDataTypeStockValueConfiguration.vue\";\nimport DatahubDataTypeStringValueConfiguration from \"@/components/dataTypes/StringValue/DatahubDataTypeStringValueConfiguration.vue\";\nimport DatahubDataTypeTextFieldConfiguration from \"@/components/dataTypes/TextField/DatahubDataTypeTextFieldConfiguration.vue\";\nimport DatahubDataTypeTreeNodeValueConfiguration from \"@/components/dataTypes/TreeNodeValue/DatahubDataTypeTreeNodeValueConfiguration.vue\";\nimport DatahubDataTypeUnitValueConfiguration from \"@/components/dataTypes/UnitValue/DatahubDataTypeUnitValueConfiguration.vue\";\nimport DatahubDataTypeImageValueConfiguration from \"@/components/dataTypes/ImageValue/DatahubDataTypeImageValueConfiguration.vue\";\nimport DatahubDataTypeFileValueConfiguration from \"@/components/dataTypes/FileValue/DatahubDataTypeFileValueConfiguration.vue\";\nimport DatahubDataTypeOfferRelationValueConfiguration from \"@/components/dataTypes/OfferRelationValue/DatahubDataTypeOfferRelationValueConfiguration.vue\";\nimport StringToNumberExtension from \"@/components/dataTypes/etl/StringToNumberExtension.vue\";\nimport BooleanToStringExtension from \"@/components/dataTypes/etl/BooleanToStringExtension.vue\";\nimport DatahubDataTypeBooleanValueEditor from \"@/components/dataTypes/BooleanValue/DatahubDataTypeBooleanValueEditor.vue\";\nimport DatahubDataTypeFloatValueEditor from \"@/components/dataTypes/FloatValue/DatahubDataTypeFloatValueEditor.vue\";\nimport DatahubDataTypeIntegerValueEditor from \"@/components/dataTypes/IntegerValue/DatahubDataTypeIntegerValueEditor.vue\";\nimport ConstToXExtension from \"@/components/dataTypes/etl/ConstToXExtension.vue\";\nimport DatahubDataTypeStringValueEditor from \"@/components/dataTypes/StringValue/DatahubDataTypeStringValueEditor.vue\";\nimport DatahubDataTypeDateTimeValueEditor from \"@/components/dataTypes/DateTimeValue/DatahubDataTypeDateTimeValueEditor.vue\";\n\nexport const MOCKED_CONFIGS = {\n  // todo { [name]: Component | null | \"\" }\n  // data type configs\n  // \"datahub-data-type-configuration-date-field-value-editor\": null, // not used?\n  \"datahub-data-type-configuration-date-time-value\":\n    DatahubDataTypeDateTimeValueConfiguration,\n  \"datahub-data-type-configuration-double-float-value\":\n    DatahubDataTypeDoubleFloatValueConfiguration,\n  \"datahub-data-type-configuration-float-value\":\n    DatahubDataTypeFloatValueConfiguration,\n  \"datahub-data-type-configuration-integer-value\":\n    DatahubDataTypeIntegerValueConfiguration,\n  \"datahub-data-type-configuration-sale-unit-value\": null, // empty component\n  \"datahub-data-type-configuration-simple-pricing-value\":\n    DatahubDataTypeSimplePricingValueConfiguration,\n  \"datahub-data-type-configuration-stock-value\":\n    DatahubDataTypeStockValueConfiguration,\n  \"datahub-data-type-configuration-string-value\":\n    DatahubDataTypeStringValueConfiguration,\n  \"datahub-data-type-configuration-text-field-value\":\n    DatahubDataTypeTextFieldConfiguration,\n  \"datahub-data-type-configuration-tree-node-value\":\n    DatahubDataTypeTreeNodeValueConfiguration,\n  \"datahub-data-type-configuration-unit-value\":\n    DatahubDataTypeUnitValueConfiguration,\n  // \"datahub-data-type-configuration-sales-unit-value\": null, // not used?\n  \"ecmdatahubintegration-image-value-configuration\":\n    DatahubDataTypeImageValueConfiguration, // ecm plugin\n  \"ecmdatahubintegration-generic-file-value-configuration\":\n    DatahubDataTypeFileValueConfiguration, // ecm plugin\n  \"channels-data-type-configuration-offer-relation-value\":\n    DatahubDataTypeOfferRelationValueConfiguration, // channels plugin\n  // \"pim-data-type-configuration-product-relation-value\": null, // pim  plugin\n  // \"pim-data-type-configuration-product-pricing\": null, // pim  plugin\n\n  // data type renderers\n  \"datahub-data-type-boolean-render\": null, // todo\n  \"datahub-data-type-completness-render\": null, // todo\n  \"datahub-data-type-country-render\": null, // todo\n  \"datahub-data-type-currency-render\": null, // todo\n  \"datahub-data-type-date-time-render\": null, // todo\n  \"datahub-data-type-double-float-render\": null, // todo\n  \"datahub-data-type-json-render\": null, // todo\n  \"datahub-data-type-language-render\": null, // todo\n  \"datahub-data-type-relation-render\": null, // todo\n  \"datahub-data-type-sales-unit-value-render\": null, // todo\n  \"datahub-data-type-simple-pricing-render\": null, // todo\n  \"datahub-data-type-string-render\": null, // todo\n  \"datahub-data-type-text-field-render\": null, // todo\n  \"datahub-data-type-tree-node-render\": null, // todo\n  \"datahub-data-type-unit-value-render\": null, // todo\n  \"datahub-data-type-variant-value-render\": null, // todo\n\n  // data type editors\n  // \"datahub-data-type-simple-pricing-value-bulk-price\": null, // todo\n  // \"datahub-data-type-simple-pricing-value-edit\": null, // todo\n  // \"datahub-variants-multi-new\": null, // todo\n  // \"datahub-variants-multi-summary\": null, // todo\n  // \"datahub-variants-multi\": null, // todo\n  // \"datahub-variants-single\": null, // todo\n  \"datahub-data-type-boolean-value\": DatahubDataTypeBooleanValueEditor,\n  // \"bundled-entities-value-editor\": null, // todo\n  // \"datahub-complex-value-container\": null, // todo\n  \"datahub-data-type-country-value\": null, // todo\n  \"datahub-data-type-currency-value\": null, // todo\n  // \"datahub-data-type-value\": null, // todo\n  // \"datahub-relations-value\": null, // todo\n  \"datahub-data-type-date-time-value\": DatahubDataTypeDateTimeValueEditor,\n  // \"datahub-data-type-date-value\": null, // todo\n  // \"datahub-data-type-double-float-value\": null, // todo\n  \"datahub-data-type-float-value\": DatahubDataTypeFloatValueEditor,\n  \"datahub-data-type-integer-value\": DatahubDataTypeIntegerValueEditor,\n  // \"datahub-data-type-json-value\": null, // todo\n  \"datahub-data-type-language-value\": null, // todo\n  // \"datahub-data-type-output-value\": null, // todo\n  \"datahub-data-type-sales-unit-value\": null, // todo\n  \"datahub-data-type-simple-pricing-value\": null, // todo\n  \"datahub-data-type-stock-value\": null, // todo\n  \"datahub-data-type-string-value\": DatahubDataTypeStringValueEditor,\n  \"datahub-data-type-text-field-value\": null, // todo\n  \"datahub-data-type-tree-node-value\": null, // todo\n  \"datahub-data-type-unit-value\": null, // todo\n  // \"datahub-variant-value\": null, // todo\n\n  // etl config\n  \"datahub-etl-extensions-arithmetic-extension\": null, // todo\n  \"datahub-etl-extensions-basic-extension\": null, // todo\n  \"datahub-etl-extensions-boolean-to-string\": BooleanToStringExtension,\n  \"datahub-etl-extensions-concat-extension\": null, // todo\n  \"datahub-etl-extensions-const-to-x-extension\": ConstToXExtension,\n  \"datahub-etl-extensions-country-to-x-extension\": null, // todo\n  \"datahub-etl-configuration-current-date-extension\": null, // todo\n  \"datahub-etl-extension-date-to-calendar-week\": null, // todo\n  \"datahub-etl-extension-date-to-string\": null, // todo\n  \"datahub-etl-extensions-extract-value-editor\": null, // todo\n  \"datahub-etl-extensions-http-call\": null, // todo\n  \"datahub-etl-extensions-language-to-x-extension\": null, // todo\n  \"datahub-etl-extensions-mapping-table-extension\": null, // todo\n  \"datahub-etl-extension-null-coalescence\": null, // todo\n  \"datahub-etl-extension-number-to-string\": null, // todo\n  \"datahub-number-to-tree-extension\": null, // todo\n  \"datahub-etl-number-to-unit-extension\": null, // todo\n  \"datahub-etl-extensions-prefix-suffix-extension\": null, // todo\n  \"datahub-etl-extensions-preg-replace-extension\": null, // todo\n  \"datahub-etl-extensions-sales-unit-value-to-string-extension\": null, // todo\n  \"datahub-etl-extensions-simple-pricing-value-to-float-value-extension\": null, // todo\n  \"datahub-etl-extensions-split-address-extension\": null, // todo\n  \"datahub-etl-extensions-string-to-country-extension\": null, // todo\n  \"datahub-etl-extensions-string-to-number-extension\": StringToNumberExtension,\n  \"datahub-etl-extensions-tree\": null, // todo\n  \"datahub-etl-extension-tree-to-tree\": null, // todo\n  \"datahub-etl-extensions-unit-to-tree-node-extension\": null, // todo\n  \"datahub-etl-extensions-unit-value-to-number-extension\": null, // todo\n  \"datahub-etl-extensions-unit-value-to-string-extension\": null, // todo\n  \"datahub-etl-extension-unit-value-to-unit-value-editor\": null, // todo\n  \"datahub-etl-extensions-value-set-to-boolean\": null, // todo\n  \"datahub-etl-extensions-variant-to-string\": null, // todo\n  \"datahub-etl-extensions-variant-to-variant\": null, // todo\n  \"datahub-etl-extensions-x-to-date-extension\": null, // todo\n};\n","import { useI18n } from \"vue-i18n\";\nimport type { INode } from \"@/models\";\nimport type {\n  ITenantAttribute,\n  IDataTypeInstance,\n} from \"@/services/api/DataHub/Attributes\";\nimport type { ITenantETLProcess } from \"@/services/api/DataHub/ETLProcesses\";\nimport {\n  SOURCE_TYPE,\n  type ISourcePorts,\n  type ITenantETLAttributeMap,\n} from \"@/services/api/DataHub/ETLAttributeMaps\";\nimport { NAME_ATTRIBUTE_KEY } from \"@/constants\";\nimport { getExternalComponent } from \"@actindo/core-ui\";\nimport { MOCKED_CONFIGS } from \"@/MOCKS\"; // todo remove MOCKS\nimport { DATAHUB_COMPONENT_TYPE } from \"@/components/dataTypes/constants\";\n\nconst getPrefixedKey = (key: string | false, prefix = \"__\") =>\n  key ? prefix + key : \"\";\n\nexport const getTranslatableFieldName = ({\n  key,\n  scope,\n  language,\n  attribute: { scopable, multilanguage },\n}: {\n  key: string;\n  scope: string;\n  language: string;\n  attribute: ITenantAttribute;\n}) =>\n  getPrefixedKey(key, \"_\") +\n  getPrefixedKey(scopable && scope) +\n  getPrefixedKey(multilanguage && language);\n\nexport const getFormElementLabel = (\n  languageName: string,\n  scopeName: string,\n  attribute: ITenantAttribute,\n) => {\n  let ret = attribute.name;\n  if (!attribute.scopable && !attribute.multilanguage) {\n    return ret;\n  }\n\n  ret = ret + \" (\";\n  if (attribute.scopable && attribute.multilanguage) {\n    ret = `${ret}${languageName}|${scopeName}`;\n  } else if (attribute.multilanguage) {\n    ret = `${ret}${languageName}`;\n  } else {\n    ret = `${ret}${scopeName}`;\n  }\n  ret = ret + \")\";\n\n  return ret;\n};\n\nexport function getAttributeData(attr: ISourcePorts) {\n  if (attr.sourceType !== SOURCE_TYPE.EMPTY) {\n    return attr.sourceAttribute?.name ?? attr.sourceNativeField;\n  }\n\n  return !attr.sourceDataTypeInstance\n    ? \"\"\n    : useI18n().t(\"elt.constValueDataType\", {\n        value: attr.sourceDataTypeInstance.name,\n      });\n}\n\nexport function getSource(attr: ISourcePorts) {\n  return !attr.sourceLanguage && !attr.sourceScope\n    ? \"\"\n    : ` ( ${[attr.sourceLanguage.description, attr.sourceScope.name]\n        .filter(Boolean)\n        .join(\" / \")} )`;\n}\n\nexport function getDestination(attr?: ITenantETLAttributeMap) {\n  return !attr?.destinationLanguage && !attr?.destinationScope\n    ? \"\"\n    : ` ( ${[attr.destinationLanguage.description, attr.destinationScope.name]\n        .filter(Boolean)\n        .join(\" / \")} )`;\n}\n\nexport const etlProcessesFromTo = (row: ITenantETLProcess) =>\n  `${row.sourceEntityType.name} (${row.sourceEntityFriendlyIdentifier}) -> ${row.destinationEntityType.name} (${row.destinationEntityFriendlyIdentifier})`;\n\nexport const sourceAttributes = (row: ITenantETLProcess) => {\n  if (!row.etlAttributeMap.sourcePorts) {\n    return \"\";\n  }\n  return row.etlAttributeMap.sourcePorts\n    .map(({ sourceType, sourceAttribute, sourceNativeField }) => {\n      switch (sourceType) {\n        case 0:\n          return sourceAttribute.name;\n        case 2:\n          return useI18n().t(\"shared.constantValue\");\n        default:\n          return sourceNativeField;\n      }\n    })\n    .join(\", \");\n};\n\nexport const targetAttribute = (row: ITenantETLProcess) => {\n  switch (row.etlAttributeMap.destinationType) {\n    case 0:\n      return row.etlAttributeMap.destinationAttribute.name;\n    case 1:\n      return row.etlAttributeMap.destinationNativeField;\n    default:\n      return \"\";\n  }\n};\n\nexport const mapGroupToNode = (\n  data: INode<{ title?: string; name?: string }>,\n  sortOrder: number,\n) => ({\n  ...data,\n  title: data.title || data.name,\n  children: data.children?.map(mapGroupToNode),\n  sortOrder,\n});\n\nexport const getUniqId = (groupsList: INode[]) =>\n  Math.min(\n    0,\n    ...groupsList.flatMap(({ id, children = [] }) => [\n      id,\n      ...children.map((subGroup) => subGroup.id),\n    ]),\n  ) - 1;\n\nconst mapSubNode =\n  (parent_id: number, nameField: string) =>\n  <T extends object = object>(subNode: INode<T>, sortOrder: number) => ({\n    ...subNode,\n    title: subNode[nameField],\n    name: subNode[nameField],\n    parent_id,\n    active: true,\n    sortOrder,\n    children: subNode.children?.map(mapSubNode(subNode.id, nameField)),\n  });\n\nexport const collectCreated = <T extends object = object>(\n  nodesList: INode<T>[],\n  locale: string = \"de-DE\",\n  translatableKey = NAME_ATTRIBUTE_KEY,\n) => {\n  const nameField = `_${translatableKey}__${locale}`;\n  return nodesList.reduce((result, node, index) => {\n    if (node.id < 0) {\n      const mapSubNodeFn = mapSubNode(node.id, nameField);\n      const newNode = {\n        ...node,\n        title: node[nameField],\n        name: node[nameField],\n        sortOrder: index,\n        children: node.children?.map(mapSubNodeFn),\n      };\n\n      result.push(newNode);\n    } else if (node.children?.length) {\n      node.children.forEach((subNode, sortOrder) => {\n        if (subNode.id < 0) {\n          const newNode = {\n            ...subNode,\n            title: subNode[nameField],\n            name: subNode[nameField],\n            parent_id: node.id,\n            active: true,\n            sortOrder,\n          };\n\n          result.push(newNode);\n        }\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nexport const collectModified = <T extends object = object>(\n  nodesList: INode<T>[],\n  locale: string = \"de-DE\",\n  translatableKey = NAME_ATTRIBUTE_KEY,\n) => {\n  const nameField = `_${translatableKey}__${locale}`;\n  return nodesList.reduce((result, node, index) => {\n    if (node.id < 0) {\n      return result;\n    }\n\n    if (node.updated || index !== node.sortOrder) {\n      const mapSubNodeFn = mapSubNode(node.id, nameField);\n      const newGroup = {\n        ...node,\n        title: node[nameField],\n        name: node[nameField],\n        sortOrder: index,\n        children: node.children?.map(mapSubNodeFn),\n      };\n\n      result.push(newGroup);\n    } else if (node.children?.length) {\n      node.children.forEach((subNode, sortOrder) => {\n        if (\n          subNode.id >= 0 &&\n          (subNode.updated || sortOrder !== subNode.sortOrder)\n        ) {\n          const newNode = {\n            ...subNode,\n            title: subNode[nameField],\n            name: subNode[nameField],\n            id: subNode.id,\n            parent_id: node.id,\n            sortOrder,\n            active: true,\n          };\n\n          result.push(newNode);\n        }\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nexport const getExternalComponentConfig = (\n  dataTypeInstance: IDataTypeInstance,\n  type: DATAHUB_COMPONENT_TYPE,\n) => {\n  if (dataTypeInstance?.vueComponents) {\n    switch (type) {\n      case DATAHUB_COMPONENT_TYPE.CONFIG:\n        return {\n          name: dataTypeInstance.vueComponents.configurationComponent,\n          url: dataTypeInstance.vueComponents.configurationImportPath,\n        };\n\n      case DATAHUB_COMPONENT_TYPE.VALUE:\n        return {\n          name: dataTypeInstance.vueComponents.editComponent,\n          url: dataTypeInstance.vueComponents.editImportPath,\n        };\n\n      case DATAHUB_COMPONENT_TYPE.ETL_CONFIG:\n        return {\n          name: dataTypeInstance.vueComponents.etlComponent,\n          url: dataTypeInstance.vueComponents.etlImportPath,\n        };\n\n      case DATAHUB_COMPONENT_TYPE.RENDER:\n      default:\n        return {\n          name: dataTypeInstance.vueComponents.renderComponent,\n          url: dataTypeInstance.vueComponents.renderImportPath,\n        };\n    }\n  }\n\n  switch (type) {\n    case DATAHUB_COMPONENT_TYPE.CONFIG:\n      return {\n        name: dataTypeInstance.configurationWebComponent,\n        url: dataTypeInstance.configurationImport,\n      };\n\n    case DATAHUB_COMPONENT_TYPE.VALUE:\n      return {\n        name: dataTypeInstance.valueEditWebComponent,\n        url: dataTypeInstance.valueEditHtmlImport,\n      };\n\n    case DATAHUB_COMPONENT_TYPE.ETL_CONFIG:\n      return {\n        name: dataTypeInstance.vueComponents.etlComponent,\n        url: dataTypeInstance.vueComponents.etlImportPath,\n      };\n\n    case DATAHUB_COMPONENT_TYPE.RENDER:\n    default:\n      return {\n        name: dataTypeInstance.render.component,\n        url: dataTypeInstance.render.importPath,\n      };\n  }\n};\n\nexport const loadExternalComponent = (component: {\n  name: string;\n  url: string;\n}) => {\n  if (!component.name || MOCKED_CONFIGS[component.name] === null) {\n    return null;\n  }\n\n  return MOCKED_CONFIGS[component.name] || getExternalComponent(component);\n};\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { IDataTypeInstance } from \"@/services/api/DataHub/Attributes\";\nimport { DATAHUB_COMPONENT_TYPE } from \"./constants\";\nimport {\n  loadExternalComponent,\n  getExternalComponentConfig,\n} from \"@/utils/helpers\";\n\nconst props = defineProps<{\n  dataTypeInstance: IDataTypeInstance;\n  type: DATAHUB_COMPONENT_TYPE;\n}>();\n\nconst value = defineModel<unknown>();\n\nconst RequestedComponent = computed(() =>\n  loadExternalComponent(\n    getExternalComponentConfig(props.dataTypeInstance, props.type),\n  ),\n);\n</script>\n\n<template>\n  <RequestedComponent\n    v-if=\"RequestedComponent\"\n    v-model=\"value\"\n    :data-type-instance=\"dataTypeInstance\"\n  />\n</template>\n"],"names":["httpClient","MODULE_BASE_API","CHANGE_TRACKING_MODE","SOURCE_TYPE","ETL_PROCESS_STATUS","ATTRIBUTE_SET_INHERITANCE","computed","useI18n","ABtn","_useModel","ref","watch","DATAHUB_COMPONENT_TYPE","DatahubDataTypeDateTimeValueConfiguration","DatahubDataTypeDoubleFloatValueConfiguration","DatahubDataTypeFloatValueConfiguration","DatahubDataTypeIntegerValueConfiguration","DatahubDataTypeSimplePricingValueConfiguration","DatahubDataTypeStockValueConfiguration","DatahubDataTypeStringValueConfiguration","DatahubDataTypeTextFieldConfiguration","DatahubDataTypeTreeNodeValueConfiguration","DatahubDataTypeUnitValueConfiguration","DatahubDataTypeImageValueConfiguration","DatahubDataTypeFileValueConfiguration","DatahubDataTypeOfferRelationValueConfiguration","DatahubDataTypeBooleanValueEditor","DatahubDataTypeDateTimeValueEditor","DatahubDataTypeFloatValueEditor","DatahubDataTypeIntegerValueEditor","DatahubDataTypeStringValueEditor","ConstToXExtension"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,eAAA,OAAA,eAAA,EAAA;AAgBA,MAAMC,oBAAkB,GAAG,QAAQ;AAE5B,MAAM,sBAAsB;AAAA;AAAA,EAEjC,MAAM,QACJ,OAIqD;AACrD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,OAAO,KAAK;AAAA,EACvD;AAAA;AAAA,EAEA,MAAM,gBACJ,sBACA,aACqD;AACrD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,mBAAmB;AAAA,MAC1D;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AAAA;AAAA,EAEA,MAAM,sBACJ,OAC4D;AAC5D,WAAOD,aAAW,KAAK,GAAGC,iBAAe,yBAAyB,KAAK;AAAA,EACzE;AAAA;AAAA,EAEA,MAAM,4BACJ,OACiD;AACjD,WAAOD,aAAW;AAAA,MAChB,GAAGC,iBAAe;AAAA,MAClB;AAAA,IAAA;AAAA,EAEJ;AAAA;AAAA,EAEA,MAAM,OACJ,OACiD;AACjD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,UAAU,KAAK;AAAA,EAC1D;AAAA;AAAA,EAEA,MAAM,OACJ,OACiD;AACjD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,UAAU,KAAK;AAAA,EAC1D;AAAA;AAAA,EAEA,MAAM,OAAO,IAA6D;AACxE,WAAOD,aAAW,KAAK,GAAGC,iBAAe,UAAU,EAAE,IAAI;AAAA,EAC3D;AACF;ACvDY,IAAA,yCAAAC,0BAAL;AACLA,wBAAAA,sBAAA,aAAU,EAAV,IAAA;AACAA,wBAAAA,sBAAA,YAAS,CAAT,IAAA;AACAA,wBAAAA,sBAAA,mBAAgB,CAAhB,IAAA;AACAA,wBAAAA,sBAAA,eAAY,CAAZ,IAAA;AACAA,wBAAAA,sBAAA,kCAA+B,CAA/B,IAAA;AALUA,SAAAA;AAAA,GAAA,wBAAA,CAAA,CAAA;AAQM,IAAA,gCAAAC,iBAAX;AACLA,eAAAA,aAAA,aAAU,CAAV,IAAA;AACAA,eAAAA,aAAA,YAAS,CAAT,IAAA;AACAA,eAAAA,aAAA,WAAQ,CAAR,IAAA;AACAA,eAAAA,aAAA,gBAAa,CAAb,IAAA;AAJgBA,SAAAA;AAAA,GAAA,eAAA,CAAA,CAAA;ACtBlB,MAAAH,eAAA,OAAA,eAAA,EAAA;AASA,MAAMC,oBAAkB,GAAG,QAAQ;AAE5B,MAAM,kBAAkB;AAAA;AAAA,EAE7B,MAAM,QACJ,OACkD;AAClD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,WAAW,KAAK;AAAA,EAC3D;AAAA;AAAA,EAEA,MAAM,aAAa,IAAkC;AACnD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,gBAAgB,EAAE,IAAI;AAAA,EACjE;AACF;ACfY,IAAA,uCAAAG,wBAAL;AACLA,sBAAAA,oBAAA,UAAO,CAAP,IAAA;AACAA,sBAAAA,oBAAA,WAAQ,CAAR,IAAA;AACAA,sBAAAA,oBAAA,UAAO,CAAP,IAAA;AACAA,sBAAAA,oBAAA,YAAS,CAAT,IAAA;AACAA,sBAAAA,oBAAA,2BAAwB,CAAxB,IAAA;AACAA,sBAAAA,oBAAA,iBAAc,CAAd,IAAA;AACAA,sBAAAA,oBAAA,qCAAkC,CAAlC,IAAA;AACAA,sBAAAA,oBAAA,6BAA0B,CAA1B,IAAA;AARUA,SAAAA;AAAA,GAAA,sBAAA,CAAA,CAAA;ACDZ,MAAAJ,eAAA,OAAA,eAAA,EAAA;AAiBA,MAAMC,oBAAkB,GAAG,QAAQ;AAE5B,MAAM,mBAAmB;AAAA;AAAA,EAE9B,MAAM,QACJ,OAC4C;AAC5C,WAAOD,aAAW,KAAK,GAAGC,iBAAe,WAAW,KAAK;AAAA,EAC3D;AAAA;AAAA,EAEA,MAAM,IACJ,IACA,QAC2C;AACpC,WAAAD,aAAW,KAAK,GAAGC,iBAAe,OAAO,EAAE,IAAI,QAAQ;AAAA,EAChE;AAAA;AAAA,EAEA,MAAM,OACJ,QAC2C;AAC3C,WAAOD,aAAW,KAAK,GAAGC,iBAAe,UAAU,MAAM;AAAA,EAC3D;AAAA;AAAA,EAEA,MAAM,OAAO,KAAqC;AAEhD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,UAAU,EAAE,KAAK;AAAA,EAC5D;AAAA;AAAA,EAEA,MAAM,KACJ,QAC2C;AAC3C,WAAOD,aAAW,KAAK,GAAGC,iBAAe,QAAQ,MAAM;AAAA,EACzD;AAAA;AAAA,EAEA,MAAM,cAAc,OAAmD;AACrE,WAAOD,aAAW,KAAK,GAAGC,iBAAe,iBAAiB,KAAK;AAAA,EACjE;AAAA;AAAA,EAEA,MAAM,aACJ,kBACA,eACsB;AACtB,WAAO,iBAAiB,cAAc;AAAA,MACpC;AAAA,MACA,gBAAgB,CAAC,aAAa;AAAA,IAAA,CAC/B;AAAA,EACH;AAAA;AAAA,EAEA,MAAM,gBACJ,SACsB;AACtB,WAAOD,aAAW,KAAK,GAAGC,iBAAe,mBAAmB,OAAO;AAAA,EACrE;AAAA;AAAA,EAEA,MAAM,iBACJ,kBACA,gBACsB;AACtB,WAAOD,aAAW,KAAK,GAAGC,iBAAe,oBAAoB;AAAA,MAC3D;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AAAA;AAAA,EAEA,MAAM,gBACJ,kBACA,eACsB;AACtB,WAAO,iBAAiB,iBAAiB,kBAAkB,CAAC,aAAa,CAAC;AAAA,EAC5E;AAAA;AAAA,EAEA,MAAM,oCACJ,kBACiD;AACjD,WAAOD,aAAW;AAAA,MAChB,GAAGC,iBAAe;AAAA,MAClB;AAAA,QACE;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAAA;AAAA,EAEA,MAAM,cACJ,OACuD;AACvD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,iBAAiB,KAAK;AAAA,EACjE;AAAA;AAAA,EAEA,MAAM,iBAA0D;AAC9D,WAAOD,aAAW,KAAK,GAAGC,iBAAe,gBAAgB;AAAA,EAC3D;AAAA;AAAA,EAEA,MAAM,oCAA8E;AAClF,WAAOD,aAAW;AAAA,MAChB,GAAGC,iBAAe;AAAA,IAAA;AAAA,EAEtB;AACF;AC9CY,IAAA,8CAAAI,+BAAL;AAELA,6BAAAA,2BAAA,eAAY,CAAZ,IAAA;AAEAA,6BAAAA,2BAAA,aAAU,CAAV,IAAA;AAJUA,SAAAA;AAAA,GAAA,6BAAA,CAAA,CAAA;ACpEL,MAAM,qBAAqB;AAAA,EAChC,OAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AACF;AAEO,MAAM,uBAAuB;AAAA,EAClC,CAAC,mBAAmB,IAAI,GAAG;AAAA,IACzB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,CAAC,mBAAmB,KAAK,GAAG;AAAA,IAC1B,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,CAAC,mBAAmB,IAAI,GAAG;AAAA,IACzB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,CAAC,mBAAmB,MAAM,GAAG;AAAA,IAC3B,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,CAAC,mBAAmB,qBAAqB,GAAG;AAAA,IAC1C,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,CAAC,mBAAmB,WAAW,GAAG;AAAA,IAChC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,CAAC,mBAAmB,+BAA+B,GAAG;AAAA,IACpD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,CAAC,mBAAmB,uBAAuB,GAAG;AAAA,IAC5C,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AACF;AAAA,CAEoC;AAAA,EAClC,CAAC,0BAA0B,SAAS,GAAG;AAAA,EACvC,CAAC,0BAA0B,OAAO,GAAG;AACvC;AAEO,MAAM,gCAAgC;AAAA,EAC3C,CAAC,qBAAqB,OAAO,GAC3B;AAAA,EACF,CAAC,qBAAqB,MAAM,GAC1B;AAAA,EACF,CAAC,qBAAqB,aAAa,GACjC;AAAA,EACF,CAAC,qBAAqB,4BAA4B,GAChD;AAAA,EACF,CAAC,qBAAqB,SAAS,GAC7B;AACJ;AAEO,MAAM,cAAc;AAcpB,MAAM,qBAAqB;AAC3B,MAAM,mBAAmB;AAEzB,MAAM,uBAAuB;AAAA,EAClC;AAAA,IACE,UAAU;AAAA,IACV,eAAe;AAAA,IACf,KAAK;AAAA,IACL,MAAM;AAAA,EACR;AACF;AAEO,MAAM,mCAAmC;AAAA,EAC9C,mBAAmB;AAAA,EACnB,mBAAmB;AACrB;AC7GA,MAAAL,eAAA,OAAA,eAAA,EAAA;AAgBA,MAAMC,oBAAkB,GAAG,QAAQ;AAE5B,MAAM,6BAA6B;AAAA;AAAA,EAExC,MAAM,cAAc,OAA6C;AAC/D,WAAOD,aAAW,KAAK,GAAGC,iBAAe,iBAAiB,KAAK;AAAA,EACjE;AAAA;AAAA,EAEA,MAAM,gBACJ,OACoD;AACpD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,mBAAmB,KAAK;AAAA,EACnE;AAAA;AAAA,EAEA,MAAM,oBACJ,OACoD;AACpD,WAAOD,aAAW,KAAK,GAAGC,iBAAe,uBAAuB,KAAK;AAAA,EACvE;AAAA;AAAA,EAEA,MAAM,QAAQ,OAA4D;AACxE,WAAOD,aAAW,KAAK,GAAGC,iBAAe,WAAW,KAAK;AAAA,EAC3D;AACF;ACvCA,MAAAD,eAAA,OAAA,eAAA,EAAA;AASA,MAAMC,oBAAkB,GAAG,QAAQ;AAE5B,MAAM,uBAAuB;AAAA;AAAA,EAElC,MAAM,QAAQ,OAA2D;AACvE,WAAOD,aAAW,KAAK,GAAGC,iBAAe,WAAW,KAAK;AAAA,EAC3D;AAAA;AAAA,EAEA,MAAM,OAAO,KAAiD;AAC5D,WAAOD,aAAW,KAAK,GAAGC,iBAAe,UAAU,EAAE,KAAK;AAAA,EAC5D;AAAA;AAAA,EAEA,MAAM,yBACJ,KACmC;AACnC,WAAOD,aAAW,KAAK,GAAGC,iBAAe,4BAA4B;AAAA,MACnE;AAAA,IAAA,CACD;AAAA,EACH;AACF;AC5BA,MAAA,aAAA,OAAA,eAAA,EAAA;AAcA,MAAM,kBAAkB,GAAG,QAAQ;AAE5B,MAAM,yBAAyB;AAAA;AAAA,EAEpC,MAAM,QACJ,OAC0D;AAC1D,WAAO,WAAW,KAAK,GAAG,eAAe,OAAO,KAAK;AAAA,EACvD;AAAA;AAAA,EAEA,MAAM,OACJ,QACoC;AACpC,WAAO,WAAW,KAAK,GAAG,eAAe,UAAU,MAAM;AAAA,EAC3D;AAAA;AAAA,EAEA,MAAM,+BACJ,2BACiD;AACjD,WAAO,WAAW,KAAK,GAAG,eAAe,kCAAkC;AAAA,MACzE;AAAA,IAAA,CACD;AAAA,EACH;AAAA;AAAA,EAEA,MAAM,OAAO,IAAkC;AAC7C,WAAO,WAAW,KAAK,GAAG,eAAe,UAAU,EAAE,IAAI;AAAA,EAC3D;AAAA;AAAA,EAEA,MAAM,aACJ,gBACA,qBACsB;AACtB,WAAO,WAAW,KAAK,GAAG,eAAe,gBAAgB;AAAA,MACvD;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AAAA;AAAA,EAEA,MAAM,cACJ,mBACA,qBACsB;AACtB,WAAO,WAAW,KAAK,GAAG,eAAe,iBAAiB;AAAA,MACxD;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AACF;AC5DA,MAAAK,aAAA,OAAA,KAAA,EAAA;AACA,MAAAC,YAAA,OAAA,SAAA,EAAA;AACA,MAAA,YAAA,OAAA,eAAA,EAAA;;;AAsDA,MAAM,kBAAkB;AAAA,EACtB,YAAY,aAAa;AAAA,EACzB,kBAAkB;AAAA,IAChB;AAAA,MACE,OAAO,mBAAmB,MAAM;AAAA,MAChC,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO,mBAAmB,KAAK;AAAA,MAC/B,OAAO;AAAA,IACT;AAAA,EACF;AACF;AAAA,CAE8C;AAAA;AAAA,EAE5C,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,IACZ;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBD,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU,CAAC,QACT;;AAAA,0BAAI,qBAAJ,mBAAsB,SAAQ,IAAI;AAAA;AAAA,MACpC,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAEqE;AAAA;AAAA,EAEnE,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,IACZ;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAsCkD;AAAA;AAAA,EAEhD,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYV,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAEsE;AAAA,EACpE,MAAM,iBAAiB;AAAA,EACvB,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,IACZ;AAAA,MACE,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,iBAAiB,CAAC,UAChBA;AAAAA,QACE,MACE,MAAM,aAAa,MAAM,WAAW,KACpC,MAAM,aAAa,MAAM,CAAC,EAAE;AAAA,MAChC;AAAA,IACJ;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,iBAAiB,CAAC,UAChBA;AAAAA,QACE,MACE,MAAM,aAAa,MAAM,WAAW,KACpC,CAAC,MAAM,aAAa,MAAM,CAAC,EAAE;AAAA,MACjC;AAAA,IACJ;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO;AAAA,MACP,iBAAiB,CAAC,UAChBA;AAAAA,QACE,MACE,MAAM,aAAa,MAAM,WAAW,KACpC,CAAC,MAAM,aAAa,MAAM,CAAC,EAAE;AAAA,MACjC;AAAA,IACJ;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAEsD;AAAA,EACpD,MAAM,qBAAqB;AAAA,EAC3B,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,cAAc;AAAA,IACZ;AAAA,MACE,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU,CAAC,QACT;;AAAA,0BAAI,qBAAJ,mBAAsB,SAAQ,IAAI;AAAA;AAAA,MACpC,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAEuC;AAAA,EACrC,MAAM,uBAAuB;AAAA,EAC7B,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAEkD;AAAA,EAChD,MAAM,oBAAoB;AAAA,EAC1B,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,cAAc;AAAA,IACZ;AAAA,MACE,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,iBAAiB,CAAC,UAChBA;AAAAA,QACE,MACE,MAAM,aAAa,MAAM,WACxB,MAAM,aAAa,MAAM;AAAA,UACxB,CAAC,EAAE,QAAQ,EAAE;AAAA,QAAA,KAEb,MAAM,aAAa,MAAM,MAAM,CAAC,EAAE,GAAA,MAAS,CAAC,EAAE;AAAA,MACpD;AAAA,MACF,mBAAmB,CAAC,UAClBA;AAAAA,QACE,MACE,CAAC,MAAM,aAAa,MAAM,UAC1B,MAAM,aAAa,MAAM,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;AAAA,MACjD;AAAA,IACJ;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,iBAAiB,CAAC,UAChBA;AAAAA,QACE,MACE,CAAC,MAAM,aAAa,MAAM,UAC1B,MAAM,aAAa,MAAM;AAAA,UACvB,CAAC,EAAE,IAAI,EAAE,MAAM,MAAM,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,MACF,mBAAmB,CAAC,UAClBA,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA;AAAAA,QACE,MACE,CAAC,MAAM,aAAa,MAAM,UAC1B,MAAM,aAAa,MAAM,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;AAAA,MACjD;AAAA,IACJ;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU,CAAC,QAA8B;;AACjC,cAAA,SAAQ,SAAI,OAAJ,mBAAQ;AAClB,YAAA,EAAC,+BAAO,SAAQ;AACX,iBAAAC,UAAU,EAAA,EAAE,0BAA0B;AAAA,QAC/C;AAEA,eAAO,MACJ,IAAI,CAAC,SAAS,iBAAiB,IAAI,IAAI,UAAU,IAAI,CAAC,EACtD,KAAK,IAAI;AAAA,MACd;AAAA,IACF;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU,CAAC,QAA8B;;AACjC,cAAA,SAAQ,SAAI,OAAJ,mBAAQ;AACtB,cAAM,eACJ,+BAA8B,SAAI,OAAJ,mBAAQ,0BAA0B;AAE3D,eAAA,CAAC,QACJ,KACA,SAAS,eAAe,KAAKA,UAAU,EAAA,EAAE,YAAY,CAAC,MAAM;AAAA,MAClE;AAAA,IACF;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU,CAAC,QAA8B;AAChC,eAAA,GAAG,IAAI,EAAE,IAAI,IAAI,eAAe,IAAI,EAAE,CAAC;AAAA,MAChD;AAAA,IACF;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAEiD;AAAA,EAC/C,MAAM,gBAAgB;AAAA,EACtB,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,IACZ;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBD;AAAAA,QACE,MACE,CAAC,MAAM,aAAa,MAAM,UAC1B,MAAM,aAAa,MAAM;AAAA,UACvB,CAAC,EAAE,aACD,CAAC,iCAAiC,SAAS,MAAM;AAAA,QACrD;AAAA,MACJ;AAAA,IACJ;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,kBAAkB,OAAO,QAAQ,oBAAoB,EAAE;AAAA,QACrD,CAAC,CAAC,OAAO,EAAE,MAAO,CAAA,OAAO,EAAE,OAAO,OAAO;MAC3C;AAAA,MACA,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU;AAAA,IACZ;AAAA,IAEA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAE4C;AAAA;AAAA,EAE1C,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,IACZ;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAE6C;AAAA;AAAA,EAE3C,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,IACZ;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA,WAAS,MAAM,CAAC,MAAM,aAAa,MAAM,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAE8C;AAAA,EAC5C,MAAM,cAAc;AAAA,EACpB,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU,CAAC,QAA0B;AAC7B,cAAA,OAAO,IAAI,SAAS,UAAU;AACpC,cAAM,QAAQ,IAAI,MACf,IAAI,CAAC,EAAE,IAAI,OAAO,MAAM,OAAO,IAAI,SAAS,MAAM,MAAM,EACxD,OAAO,OAAO,EACd,KAAK,IAAI;AACL,eAAA,EAAE,MAAM;MACjB;AAAA,IACF;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAAA,CAEmD;AAAA;AAAA,EAEjD,QAAQ;AAAA,EACR,cAAc,cAAc;AAAA,EAC5B,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,UAAU,UAAU;AAAA,EACpB,eAAe;AAAA,EACf,cAAc;AAAA,IACZ;AAAA,MACE,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA,WAAS,MAAM;AACb,eACE,CAAC,MAAM,aAAa,MAAM,UAC1B,MAAM,aAAa,MAAM,MAAM,CAAC,EAAE,aAAa,MAAM;AAAA,MAAA,CAExD;AAAA,MACH,iBAAiB,CAAC,UAChBA;AAAAA,QACE,MACE,MAAM,aAAa,MAAM,UACzB,MAAM,aAAa,MAAM,MAAM,CAAC,EAAE,OAAA,MAAa,MAAM;AAAA,MACzD;AAAA,IACJ;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,mBAAmB,CAAC,UAClBA;AAAAA,QACE,MACE,CAAC,MAAM,aAAa,MAAM,UAC1B,MAAM,aAAa,MAAM,MAAM,CAAC,EAAE,OAAO,MAAM,CAAC,MAAM;AAAA,MAC1D;AAAA,MACF,iBAAiB,CAAC,UAChBA;AAAAA,QACE,MACE,CAAC,MAAM,aAAa,MAAM,UAC1B,MAAM,aAAa,MAAM,KAAK,CAAC,EAAE,OAAO,MAAM,CAAC,MAAM;AAAA,MACzD;AAAA,IACJ;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,MACH,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY,aAAa;AAAA,MACzB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAmDO,MAAM,iBAA+B;AAAA,EAC1C,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,SAAS;AAAA,IACP;AAAA,MACE,IAAI;AAAA,MACJ,QAAQ;AAAA,IACV;AAAA,EACF;AACF;AC5hDA,OAAA,SAAA,EAAA;AACA,OAAA,qBAAA,EAAA;AAGa,MAAA,eAAe,CAAC,OAAe,UAAkB;AAC5D,MAAI,CAAC,OAAO;AACH,WAAA;AAAA,EACT;AACA,SAAO,MAAM,KAAK,KAAK,KAAK,CAAC,MAAM,SAAS,IAAI;AAClD;AAaO,MAAM,qBAAqB,CAAC,KAAkB,YAAoB,MAAM;AACzE,MAAA,CAAC,IAAI,OAAO;AACP,WAAA;AAAA,EACT;AAEA,SAAO,WAAW,CAAC,aAAa,SAAS,IAAI,KAAK,IAC9C,6BACA;AACN;;;;;;;;;;;;;;AC7BA,MAAAA,aAAA,OAAA,KAAA,EAAA;;;AACA,MAAAE,SAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;;;;AAIA,UAAM,QAAQ;AAkBd,UAAM,OAAO;AAKP,UAAA,WAAWC,YAAoB,SAAA,YAAA;AAE/B,UAAA,YAAYC,MAAI,KAAK;AACrB,UAAA,aAAaA,MAAI,EAAE;AAEzB,UAAM,eAAeJ,WAAS,mBAAmB,YAAY,MAAM,OAAO,CAAC;AAC3E,UAAM,oBAAoBA,WAAS,mBAAmB,UAAU,MAAM,OAAO,CAAC;AAE9E,aAAS,WAAW;AAClB,eAAS,QAAQ,WAAW;AAC5B,gBAAU,QAAQ;AACb,WAAA,WAAW,WAAW,KAAK;AAAA,IAClC;AAEMK,YAAA,mBAAmB,CAAC,aAAa,KAAK,cAAc,QAAQ,QAAQ,CAAC,GAAG;AAAA,MAC5E,WAAW;AAAA,IAAA,CACZ;AAEDA;AAAAA,MACE;AAAA,MACA,CAAC,UAAU;AACT,mBAAW,QAAQ;AAAA,MACrB;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CpB,MAAAL,aAAA,OAAA,KAAA,EAAA;;;AACA,MAAAC,YAAA,OAAA,SAAA,EAAA;AACA,MAAA,OAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;AAgBA,UAAM,QAAQ;AAQd,UAAM,OAAO;AAKP,UAAA,EAAE,WAAWA;AAEb,UAAA,YAAYG,MAAI,KAAK;AAC3B,UAAM,YAAYA;AAClB,UAAM,WAAWJ,WAAS,MAAA;;AAAM,6BAAU,UAAV,mBAAiB;AAAA,KAAG;AACpD,UAAM,eAAeA,WAAS,mBAAmB,UAAU,WAAW,CAAC;AAEvE,UAAM,aAAaA,WAAS,MAAO,aAAa,QAAQ,eAAe,EAAG;AAC1E,UAAM,UAAUA,WAAS,MAAO,MAAM,SAAS,aAAa,MAAU;AAEtE,aAAS,WAAW;AAClB,gBAAU,QAAQ;AAClB,YAAM,eAAe,OAAO,MAAM,QAAQ,KAAK,GAAG;AAC5C,YAAA,YAAY,+BAA+B,YAAY;AACvD,YAAA,iBAAiB,UAAU,MAAM,SAAS;AAChD,gBAAU,MAAM,QAAQ;AACxB,gBAAU,MAAM,OAAO;AAElB,WAAA,QAAQ,UAAU,KAAK;AAAA,IAC9B;AAEA,aAAS,iBAAiB;AACxB,gBAAU,QAAQ,EAAE,GAAG,MAAM,KAAK;AAClC,gBAAU,QAAQ;AAAA,IACpB;AAEAK,YAAM,MAAM,MAAM,MAAM,gBAAgB,EAAE,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzD3D,MAAAL,aAAA,OAAA,KAAA,EAAA;;AACA,MAAAC,YAAA,OAAA,SAAA,EAAA;AACA,MAAA,UAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;;;;;AAWA,UAAM,QAAQ;AA0Bd,UAAM,OAAO;AAMP,UAAA,QAAQE,YAAiB,SAAA,YAAA;AAEzB,UAAA,EAAE,MAAMF;AAER,UAAA,aAAaG,MAAI,EAAE;AAEzB,UAAM,gBAAgBJ,WAAS;AAAA,MAC7B,KAAK,MAAM;AACT,YAAI,CAAC,WAAW,SAAS,CAAC,MAAM,iBAAiB;AAC/C,iBAAO,MAAM;AAAA,QACf;AACA,cAAM,WAAW,MAAM,gBAAgB,WAAW,KAAK;AAEhD,eAAA,MAAM,MAAM,OAAO,QAAQ;AAAA,MACpC;AAAA,MACA,KAAK,CAAC,UAAU;AACd,cAAM,QAAQ;AAAA,MAChB;AAAA,IAAA,CACD;AAEK,UAAA,aAAaA,WAAS,OAAO;AAAA,MACjC,WAAW,MAAM,QACb,EAAE,MAAM,KAAK,IACb,EAAE,kCAAkC,EAAE,OAAO,MAAM,SAAS,GAAG;AAAA,MACnE,WAAW,MAAM;AAAA,MACjB,eAAe;AAAA,QACb;AAAA,UACE,OAAO,MAAM,WAAW,EAAE,MAAM,QAAQ,IAAI;AAAA,UAC5C,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA,gBAAgB,CAAC,WAAW;AAAA,MAC5B,kBAAkB,CAAC,MAAM;AAAA,MACzB,GAAG;AAAA,IACH,EAAA;AAEO,aAAA,YAAY,EAAE,SAA0B;AAC/C,iBAAW,QAAQ,+BAAO,OAAO;AACjC,UAAI,WAAW,OAAO;AACpB,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAES,aAAA,WAAW,UAAkB,aAAgB;AAC9C,YAAA,QAAQ,MAAM,MAAM;AAAA,QAAI,CAAC,MAAM,UACnC,UAAU,WAAW,OAAO,EAAE,GAAG,MAAM,GAAG,aAAa,SAAS,KAAK;AAAA,MAAA;AAAA,IAEzE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA,MAAAA,aAAA,OAAA,KAAA,EAAA;;AACA,MAAA,eAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;;;AAMA,UAAM,QAAQ;AA2Bd,UAAM,OAAO;AAMP,UAAA,YAAYG,YAA2B,SAAA,YAAsB;AAE7D,UAAA,cAAcC,MAAc,CAAA,CAAE;AAEpC,UAAM,gBAAgBJ;AAAAA,MAAS,MAC7B,YAAY,MACT;AAAA,QACC,CAAC,QAAQ,OAAO;;AACd,gBAAM,iBAAgB,YACnB,GAAG,EAAE,MADc,mBAElB,KAAK,CAAC,SAAS,KAAK,MAAM,MAAM,MAAM;AAC1C,cAAI,+CAAe,UAAU;AACpB,mBAAA,KAAK,cAAc,QAAQ;AAAA,UACpC;AAEO,iBAAA;AAAA,QACT;AAAA,QACA,CAAC,UAAU,KAAK;AAAA,MAEjB,EAAA,MAAM,GAAG,MAAM,QAAQ;AAAA,IAAA;AAGnB,aAAA,WAAW,MAAoB,OAAe;AACjD,UAAA,QAAQ,CAAC,KAAK,UAAU;AAC1B,aAAK,WAAW;MAClB;AACA,kBAAY,QAAQ,YAAY,MAC7B,MAAM,GAAG,KAAK,EACd,OAAO,KAAK,MAAM,MAAM,CAAW,EACnC,MAAM,GAAG,MAAM,QAAQ;AACrB,WAAA,YAAY,MAAM,KAAK;AAAA,IAC9B;AAEA,aAAS,WAAW,OAAe;AACjC,YAAM,OAAO,MAAM,WAAW,cAAc,MAAM,KAAK,CAAC;AACxD,iBAAW,MAAM,KAAK;AAAA,IACxB;AAES,aAAA,YAAY,OAAuB,OAAe;AACzD,WAAK,SAAS;AACd,UAAI,CAAC,OAAO;AACV,kBAAU,QAAQ;AAClB;AAAA,MACF;AAEA,YAAM,KAAK,YAAY,MAAM,QAAQ,CAAC;AACtC,YAAM,aAAa,cAAc,MAAM,QAAQ,CAAC,EAAE;AAAA,QAChD,CAAC,SAAS,KAAK,MAAM,MAAM,MAAM;AAAA,MAAA;AAEnC,UAAI,YAAY;AACd,mBAAW,WAAW;AAAA,MACxB;AAAA,IACF;AAES,aAAA,WAAW,SAAuB,OAAe;;AACxD,WAAK,UAAU,OAAO;AACtB,UAAI,CAAC,OAAO;AACA,kBAAA,QAAQ,UAAU,MAAM;AAAA,UAChC,CAAC,SAAS,KAAK,MAAM,MAAM,MAAM,QAAQ,MAAM,MAAM;AAAA,QAAA;AAEvD;AAAA,MACF;AAEA,YAAM,KAAK,YAAY,MAAM,QAAQ,CAAC;AACtC,YAAM,aAAa,cAAc,MAAM,QAAQ,CAAC,EAAE;AAAA,QAChD,CAAC,SAAS,KAAK,MAAM,MAAM,MAAM;AAAA,MAAA;AAEnC,UAAI,YAAY;AACH,mBAAA,YAAW,gBAAW,aAAX,mBAAqB;AAAA,UACzC,CAAC,SAAS,KAAK,MAAM,MAAM,MAAM,QAAQ,MAAM,MAAM;AAAA;AAAA,MAEzD;AAAA,IACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChHA,MAAA,kBAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,MAAAA,aAAA,OAAA,KAAA,EAAA;;;AACA,MAAAC,YAAA,OAAA,SAAA,EAAA;AAEA,MAAA,OAAA,OAAA,eAAA,EAAA;;;;;;;;;;;;;;;;;AA0BA,UAAM,QAAQ;AASR,UAAA,gBAAgBE,YAAiD,SAAA,YAAC;AAElE,UAAA,EAAE,WAAWF;AAEb,UAAA,QAAQ,IAA8B,CAAA,CAAE;AACxC,UAAA,YAAY,IAAI,KAAK;AACrB,UAAA,YAAY,IAAI,KAAK;AACrB,UAAA,eAAe,IAAmB,CAAA,CAAE;AACpC,UAAA,OAAOD,WAAS,MAAM;AAC1B,YAAM,eAAe,OAAO,MAAM,QAAQ,KAAK,GAAG;AAC3C,aAAA;AAAA,QACL,GAAG;AAAA;AAAA,UAED,GAAG;AAAA;AAAA,YAED,SAAS,eAAe,MAAM,OAAO,cAAc,gBAAgB;AAAA,YACnE,UAAU,gBAAgB,MAAM,OAAO,cAAc,gBAAgB;AAAA,YACrE,SAAS,aAAa;AAAA,UACxB;AAAA,QACF;AAAA,MAAA;AAAA,IACF,CACD;AAED,aAAS,WAAW,MAAgC;AAClD,gBAAU,QAAQ;AACZ,YAAA,KAAK,UAAU,MAAM,KAAK;AAChC,YAAM,UAAU;AAAA,QACd;AAAA,QACA,OAAO;AAAA,QACP,UAAU,CAAC;AAAA,QACX,MAAM;AAAA,QACN,QAAQ;AAAA,MAAA;AAEV,WAAK,KAAK,OAAO;AACV,aAAA;AAAA,IACT;AAES,aAAA,WAAW,EAAE,MAA8B;AAClD,gBAAU,QAAQ;AAClB,mBAAa,MAAM,KAAK,EAAE,GAAI,CAAA;AAAA,IAChC;AAEAK;AAAAA,MACE,MAAM;;AAAA,2BAAM,cAAN,mBAAiB;AAAA;AAAA,MACvB,OAAO,gBAAgB;AACrB,YAAI,CAAC,aAAa;AAChB;AAAA,QACF;AAEI,YAAA;AACF,oBAAU,QAAQ;AAClB,gBAAM,EAAE,SAAA,IAAa,MAAM,2BAA2B,gBAAgB;AAAA,YACpE;AAAA,YACA,YAAY;AAAA,YACZ,SAAS;AAAA,YACT,uBAAuB;AAAA,UAAA,CACxB;AACK,gBAAA,QAAQ,SAAS,IAAI,cAAc;AAAA,iBAClC,KAAK;AAEJ,kBAAA,IAAK,IAAmB,OAAO;AAAA,QAAA,UACvC;AACA,oBAAU,QAAQ;AAAA,QACpB;AAAA,MACF;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IAAA;AAGdA,YAAA,MAAM,CAAC,UAAU;AACrB,oBAAc,MAAM,OAAO;AAAA,IAAA,CAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GW,IAAA,2CAAAC,4BAAL;AACLA,0BAAA,wBAAA,QAAA,IAAA,CAAA,IAAA;AACAA,0BAAA,wBAAA,OAAA,IAAA,CAAA,IAAA;AACAA,0BAAA,wBAAA,QAAA,IAAA,CAAA,IAAA;AACAA,0BAAA,wBAAA,YAAA,IAAA,CAAA,IAAA;AAJUA,SAAAA;AAAA,GAAA,0BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;ACcZ,UAAM,QAAQ;AAER,UAAA,gBAAgBH,YAAe,SAAA,YAAA;;;;;;;;;;;;;;;ACfrC,MAAA,QAAA,OAAA,KAAA,EAAA;;;;;;;;;;;AAUA,UAAM,QAAQ;AAER,UAAA,gBAAgBA,YAA4B,SAAA,YAAC;AAEnD;AAAA,MACE,MAAM,cAAc,MAAM;AAAA,MAC1B,CAAC,UAAU;AACT,sBAAc,MAAM,QAAQ;AAAA,MAC9B;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IAAA;;;;;;;;;;;;ACEb,MAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAI5B,mDACEI;AAAAA,EACF,sDACEC;AAAAA,EACF,+CACEC;AAAAA,EACF,iDACEC;AAAAA,EACF,mDAAmD;AAAA;AAAA,EACnD,wDACEC;AAAAA,EACF,+CACEC;AAAAA,EACF,gDACEC;AAAAA,EACF,oDACEC;AAAAA,EACF,mDACEC;AAAAA,EACF,8CACEC;AAAAA;AAAAA,EAEF,mDACEC;AAAAA;AAAAA,EACF,0DACEC;AAAAA;AAAAA,EACF,yDACEC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAKF,oCAAoC;AAAA;AAAA,EACpC,wCAAwC;AAAA;AAAA,EACxC,oCAAoC;AAAA;AAAA,EACpC,qCAAqC;AAAA;AAAA,EACrC,sCAAsC;AAAA;AAAA,EACtC,yCAAyC;AAAA;AAAA,EACzC,iCAAiC;AAAA;AAAA,EACjC,qCAAqC;AAAA;AAAA,EACrC,qCAAqC;AAAA;AAAA,EACrC,6CAA6C;AAAA;AAAA,EAC7C,2CAA2C;AAAA;AAAA,EAC3C,mCAAmC;AAAA;AAAA,EACnC,uCAAuC;AAAA;AAAA,EACvC,sCAAsC;AAAA;AAAA,EACtC,uCAAuC;AAAA;AAAA,EACvC,0CAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS1C,mCAAmCC;AAAAA;AAAAA;AAAAA,EAGnC,mCAAmC;AAAA;AAAA,EACnC,oCAAoC;AAAA;AAAA;AAAA;AAAA,EAGpC,qCAAqCC;AAAAA;AAAAA;AAAAA,EAGrC,iCAAiCC;AAAAA,EACjC,mCAAmCC;AAAAA;AAAAA,EAEnC,oCAAoC;AAAA;AAAA;AAAA,EAEpC,sCAAsC;AAAA;AAAA,EACtC,0CAA0C;AAAA;AAAA,EAC1C,iCAAiC;AAAA;AAAA,EACjC,kCAAkCC;AAAAA,EAClC,sCAAsC;AAAA;AAAA,EACtC,qCAAqC;AAAA;AAAA,EACrC,gCAAgC;AAAA;AAAA;AAAA;AAAA,EAIhC,+CAA+C;AAAA;AAAA,EAC/C,0CAA0C;AAAA;AAAA,EAC1C,4CAA4C;AAAA,EAC5C,2CAA2C;AAAA;AAAA,EAC3C,+CAA+CC;AAAAA,EAC/C,iDAAiD;AAAA;AAAA,EACjD,oDAAoD;AAAA;AAAA,EACpD,+CAA+C;AAAA;AAAA,EAC/C,wCAAwC;AAAA;AAAA,EACxC,+CAA+C;AAAA;AAAA,EAC/C,oCAAoC;AAAA;AAAA,EACpC,kDAAkD;AAAA;AAAA,EAClD,kDAAkD;AAAA;AAAA,EAClD,0CAA0C;AAAA;AAAA,EAC1C,0CAA0C;AAAA;AAAA,EAC1C,oCAAoC;AAAA;AAAA,EACpC,wCAAwC;AAAA;AAAA,EACxC,kDAAkD;AAAA;AAAA,EAClD,iDAAiD;AAAA;AAAA,EACjD,+DAA+D;AAAA;AAAA,EAC/D,wEAAwE;AAAA;AAAA,EACxE,kDAAkD;AAAA;AAAA,EAClD,sDAAsD;AAAA;AAAA,EACtD,qDAAqD;AAAA,EACrD,+BAA+B;AAAA;AAAA,EAC/B,sCAAsC;AAAA;AAAA,EACtC,sDAAsD;AAAA;AAAA,EACtD,yDAAyD;AAAA;AAAA,EACzD,yDAAyD;AAAA;AAAA,EACzD,yDAAyD;AAAA;AAAA,EACzD,+CAA+C;AAAA;AAAA,EAC/C,4CAA4C;AAAA;AAAA,EAC5C,6CAA6C;AAAA;AAAA,EAC7C,8CAA8C;AAAA;AAChD;AC7IA,MAAA,UAAA,OAAA,SAAA,EAAA;AAaA,MAAA,uBAAA,OAAA,eAAA,EAAA;AA6CO,SAAS,iBAAiB,MAAoB;;AAC/C,MAAA,KAAK,eAAe,YAAY,OAAO;AAClC,aAAA,UAAK,oBAAL,mBAAsB,SAAQ,KAAK;AAAA,EAC5C;AAEA,SAAO,CAAC,KAAK,yBACT,KACA,QAAQ,EAAE,EAAE,0BAA0B;AAAA,IACpC,OAAO,KAAK,uBAAuB;AAAA,EAAA,CACpC;AACP;AAEO,SAAS,UAAU,MAAoB;AACrC,SAAA,CAAC,KAAK,kBAAkB,CAAC,KAAK,cACjC,KACA,MAAM,CAAC,KAAK,eAAe,aAAa,KAAK,YAAY,IAAI,EAC1D,OAAO,OAAO,EACd,KAAK,KAAK,CAAC;AACpB;AAEO,SAAS,eAAe,MAA+B;AACrD,SAAA,EAAC,6BAAM,wBAAuB,EAAC,6BAAM,oBACxC,KACA,MAAM,CAAC,KAAK,oBAAoB,aAAa,KAAK,iBAAiB,IAAI,EACpE,OAAO,OAAO,EACd,KAAK,KAAK,CAAC;AACpB;AAEO,MAAM,qBAAqB,CAAC,QACjC,GAAG,IAAI,iBAAiB,IAAI,KAAK,IAAI,8BAA8B,QAAQ,IAAI,sBAAsB,IAAI,KAAK,IAAI,mCAAmC;AAE1I,MAAA,mBAAmB,CAAC,QAA2B;AACtD,MAAA,CAAC,IAAI,gBAAgB,aAAa;AAC7B,WAAA;AAAA,EACT;AACO,SAAA,IAAI,gBAAgB,YACxB,IAAI,CAAC,EAAE,YAAY,iBAAiB,wBAAwB;AAC3D,YAAQ,YAAY;AAAA,MAClB,KAAK;AACH,eAAO,gBAAgB;AAAA,MACzB,KAAK;AACI,eAAA,QAAU,EAAA,EAAE,sBAAsB;AAAA,MAC3C;AACS,eAAA;AAAA,IACX;AAAA,EAAA,CACD,EACA,KAAK,IAAI;AACd;AAEa,MAAA,kBAAkB,CAAC,QAA2B;AACjD,UAAA,IAAI,gBAAgB,iBAAiB;AAAA,IAC3C,KAAK;AACI,aAAA,IAAI,gBAAgB,qBAAqB;AAAA,IAClD,KAAK;AACH,aAAO,IAAI,gBAAgB;AAAA,IAC7B;AACS,aAAA;AAAA,EACX;AACF;AAEa,MAAA,iBAAiB,CAC5B,MACA,cACI;;AAAA;AAAA,IACJ,GAAG;AAAA,IACH,OAAO,KAAK,SAAS,KAAK;AAAA,IAC1B,WAAU,UAAK,aAAL,mBAAe,IAAI;AAAA,IAC7B;AAAA,EACF;AAAA;AAEa,MAAA,YAAY,CAAC,eACxB,KAAK;AAAA,EACH;AAAA,EACA,GAAG,WAAW,QAAQ,CAAC,EAAE,IAAI,WAAW,CAAA,QAAS;AAAA,IAC/C;AAAA,IACA,GAAG,SAAS,IAAI,CAAC,aAAa,SAAS,EAAE;AAAA,EAAA,CAC1C;AACH,IAAI;AAEN,MAAM,aACJ,CAAC,WAAmB,cACpB,CAA4B,SAAmB,cAAuB;;AAAA;AAAA,IACpE,GAAG;AAAA,IACH,OAAO,QAAQ,SAAS;AAAA,IACxB,MAAM,QAAQ,SAAS;AAAA,IACvB;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,IACA,WAAU,aAAQ,aAAR,mBAAkB,IAAI,WAAW,QAAQ,IAAI,SAAS;AAAA,EAClE;AAAA;AAEK,MAAM,iBAAiB,CAC5B,WACA,SAAiB,SACjB,kBAAkB,uBACf;AACH,QAAM,YAAY,IAAI,eAAe,KAAK,MAAM;AAChD,SAAO,UAAU,OAAO,CAAC,QAAQ,MAAM,UAAU;;AAC3C,QAAA,KAAK,KAAK,GAAG;AACf,YAAM,eAAe,WAAW,KAAK,IAAI,SAAS;AAClD,YAAM,UAAU;AAAA,QACd,GAAG;AAAA,QACH,OAAO,KAAK,SAAS;AAAA,QACrB,MAAM,KAAK,SAAS;AAAA,QACpB,WAAW;AAAA,QACX,WAAU,UAAK,aAAL,mBAAe,IAAI;AAAA,MAAY;AAG3C,aAAO,KAAK,OAAO;AAAA,IAAA,YACV,UAAK,aAAL,mBAAe,QAAQ;AAChC,WAAK,SAAS,QAAQ,CAAC,SAAS,cAAc;AACxC,YAAA,QAAQ,KAAK,GAAG;AAClB,gBAAM,UAAU;AAAA,YACd,GAAG;AAAA,YACH,OAAO,QAAQ,SAAS;AAAA,YACxB,MAAM,QAAQ,SAAS;AAAA,YACvB,WAAW,KAAK;AAAA,YAChB,QAAQ;AAAA,YACR;AAAA,UAAA;AAGF,iBAAO,KAAK,OAAO;AAAA,QACrB;AAAA,MAAA,CACD;AAAA,IACH;AAEO,WAAA;AAAA,EACT,GAAG,CAAE,CAAA;AACP;AAEO,MAAM,kBAAkB,CAC7B,WACA,SAAiB,SACjB,kBAAkB,uBACf;AACH,QAAM,YAAY,IAAI,eAAe,KAAK,MAAM;AAChD,SAAO,UAAU,OAAO,CAAC,QAAQ,MAAM,UAAU;;AAC3C,QAAA,KAAK,KAAK,GAAG;AACR,aAAA;AAAA,IACT;AAEA,QAAI,KAAK,WAAW,UAAU,KAAK,WAAW;AAC5C,YAAM,eAAe,WAAW,KAAK,IAAI,SAAS;AAClD,YAAM,WAAW;AAAA,QACf,GAAG;AAAA,QACH,OAAO,KAAK,SAAS;AAAA,QACrB,MAAM,KAAK,SAAS;AAAA,QACpB,WAAW;AAAA,QACX,WAAU,UAAK,aAAL,mBAAe,IAAI;AAAA,MAAY;AAG3C,aAAO,KAAK,QAAQ;AAAA,IAAA,YACX,UAAK,aAAL,mBAAe,QAAQ;AAChC,WAAK,SAAS,QAAQ,CAAC,SAAS,cAAc;AAC5C,YACE,QAAQ,MAAM,MACb,QAAQ,WAAW,cAAc,QAAQ,YAC1C;AACA,gBAAM,UAAU;AAAA,YACd,GAAG;AAAA,YACH,OAAO,QAAQ,SAAS;AAAA,YACxB,MAAM,QAAQ,SAAS;AAAA,YACvB,IAAI,QAAQ;AAAA,YACZ,WAAW,KAAK;AAAA,YAChB;AAAA,YACA,QAAQ;AAAA,UAAA;AAGV,iBAAO,KAAK,OAAO;AAAA,QACrB;AAAA,MAAA,CACD;AAAA,IACH;AAEO,WAAA;AAAA,EACT,GAAG,CAAE,CAAA;AACP;AAEa,MAAA,6BAA6B,CACxC,kBACA,SACG;AACH,MAAI,qDAAkB,eAAe;AACnC,YAAQ,MAAM;AAAA,MACZ,KAAK,uBAAuB;AACnB,eAAA;AAAA,UACL,MAAM,iBAAiB,cAAc;AAAA,UACrC,KAAK,iBAAiB,cAAc;AAAA,QAAA;AAAA,MAGxC,KAAK,uBAAuB;AACnB,eAAA;AAAA,UACL,MAAM,iBAAiB,cAAc;AAAA,UACrC,KAAK,iBAAiB,cAAc;AAAA,QAAA;AAAA,MAGxC,KAAK,uBAAuB;AACnB,eAAA;AAAA,UACL,MAAM,iBAAiB,cAAc;AAAA,UACrC,KAAK,iBAAiB,cAAc;AAAA,QAAA;AAAA,MAGxC,KAAK,uBAAuB;AAAA,MAC5B;AACS,eAAA;AAAA,UACL,MAAM,iBAAiB,cAAc;AAAA,UACrC,KAAK,iBAAiB,cAAc;AAAA,QAAA;AAAA,IAE1C;AAAA,EACF;AAEA,UAAQ,MAAM;AAAA,IACZ,KAAK,uBAAuB;AACnB,aAAA;AAAA,QACL,MAAM,iBAAiB;AAAA,QACvB,KAAK,iBAAiB;AAAA,MAAA;AAAA,IAG1B,KAAK,uBAAuB;AACnB,aAAA;AAAA,QACL,MAAM,iBAAiB;AAAA,QACvB,KAAK,iBAAiB;AAAA,MAAA;AAAA,IAG1B,KAAK,uBAAuB;AACnB,aAAA;AAAA,QACL,MAAM,iBAAiB,cAAc;AAAA,QACrC,KAAK,iBAAiB,cAAc;AAAA,MAAA;AAAA,IAGxC,KAAK,uBAAuB;AAAA,IAC5B;AACS,aAAA;AAAA,QACL,MAAM,iBAAiB,OAAO;AAAA,QAC9B,KAAK,iBAAiB,OAAO;AAAA,MAAA;AAAA,EAEnC;AACF;AAEa,MAAA,wBAAwB,CAAC,cAGhC;AACJ,MAAI,CAAC,UAAU,QAAQ,eAAe,UAAU,IAAI,MAAM,MAAM;AACvD,WAAA;AAAA,EACT;AAEA,SAAO,eAAe,UAAU,IAAI,KAAK,qBAAqB,SAAS;AACzE;;;;;;;;AChTA,MAAA,WAAA,OAAA,KAAA,EAAA;;;;;;;;;;;;AAQA,UAAM,QAAQ;AAKR,UAAA,QAAQ,UAAqB,SAAA,YAAA;AAEnC,UAAM,qBAAqB;AAAA,MAAS,MAClC;AAAA,QACE,2BAA2B,MAAM,kBAAkB,MAAM,IAAI;AAAA,MAC/D;AAAA,IAAA;;;;;;;;;;;"}